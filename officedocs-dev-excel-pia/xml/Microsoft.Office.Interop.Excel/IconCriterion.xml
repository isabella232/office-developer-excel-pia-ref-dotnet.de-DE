<Type Name="IconCriterion" FullName="Microsoft.Office.Interop.Excel.IconCriterion">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e19325de9317002315e49c97966302e1963aa338e03106c2d0ee40b91ef31a87" /><Meta Name="ms.sourcegitcommit" Value="daf501296516d104cf396246ac0d336adfeffd0d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/06/2021" /><Meta Name="ms.locfileid" Value="54505035" /></Metadata><TypeSignature Language="C#" Value="public interface IconCriterion" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IconCriterion" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.IconCriterion" />
  <TypeSignature Language="VB.NET" Value="Public Interface IconCriterion" />
  <TypeSignature Language="C++ CLI" Value="public interface class IconCriterion" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00024499-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt das Kriterium für ein einzelnes Symbol in einem Symbolsatz dar. Das Kriterium gibt den Wertebereich und den Typ des Schwellenwerts an, die dem Symbol in einer Regel zur bedingten Formatierung von Symbolsätzen zugewiesen sind.</summary>
    <remarks><para>Alle Kriterien für ein bedingtes Symbolsatzformat sind in einer <see cref="T:Microsoft.Office.Interop.Excel.IconCriteria" /> Auflistung enthalten. Sie können auf die <b>IconCriterion</b>-Objekte in der Auflistung durch das Übergeben eines Index an die Auflistung zugreifen. Detaillierte Informationen hierzu finden Sie im Beispiel.</para>
      <para> </para></remarks>
    <example><para>Im folgenden Codebeispiel wird ein Bereich mit Zahlen dargestellt, die Testergebnisse darstellen. Anschließend wird auf den Bereich eine Regel zur bedingten Formatierung von Symbolsätzen angewendet. Der Typ des Symbolsatzes wird dann von den Standardsymbolen zu einem Symbolsatz mit fünf Pfeilen geändert. Schließlich wird der Typ des Schwellenwerts von Perzentil in eine hartcodierte Zahl geändert.</para>
      <code>&lt;span class="label"&gt;Sub CreateIconSetCF()    Dim cfIconSet As IconSetCondition        'Fill cells with sample data    With ActiveSheet        .Range("C1") = 55        .Range("C2") = 92        .Range("C3") = 88        .Range("C4") = 77        .Range("C5") = 66        .Range("C6") = 93        .Range("C7") = 76        .Range("C8") = 80        .Range("C9") = 79        .Range("C10") = 83        .Range("C11") = 66        .Range("C12") = 74    End With        Range("C1:C12").Select          'Create an icon set conditional format for the created sample data range    Set cfIconSet = Selection.FormatConditions.AddIconSetCondition        'Change the icon set to a five-arrow icon set    cfIconSet.IconSet = ActiveWorkbook.IconSets(xl5Arrows)        'The IconCriterion collection contains all IconCriteria    'By indexing into the collection you can modify each criterion    With cfIconSet.IconCriteria(1)        .Type = xlConditionValueNumber        .Value = 0        .Operator = 7    End With    With cfIconSet.IconCriteria(2)        .Type = xlConditionValueNumber        .Value = 60        .Operator = 7    End With    With cfIconSet.IconCriteria(3)        .Type = xlConditionValueNumber        .Value = 70        .Operator = 7    End With    With cfIconSet.IconCriteria(4)        .Type = xlConditionValueNumber        .Value = 80        .Operator = 7    End With    With cfIconSet.IconCriteria(5)        .Type = xlConditionValueNumber        .Value = 90        .Operator = 7    End With        End Sub&lt;/span&gt;</code></example>
  </Docs>
  <Members>
    <Member MemberName="Icon">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlIcon Icon { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlIcon Icon" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconCriterion.Icon" />
      <MemberSignature Language="VB.NET" Value="Public Property Icon As XlIcon" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlIcon Icon { Microsoft::Office::Interop::Excel::XlIcon get(); void set(Microsoft::Office::Interop::Excel::XlIcon value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2747)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2747)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2747)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlIcon</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Dient zum Abrufen oder Festlegen des Symbols für ein Kriterium in einer Regel zur bedingten Formatierung von Symbolsätzen.</summary>
        <value>To be added.</value>
        <remarks><para>Nachdem Sie die <b>Icon-Eigenschaft</b> für das Symbolkriterium in einer Bedingten Formatierungsregel für Symbolsätze festgelegt haben, wird die <see cref="P:Microsoft.Office.Interop.Excel.IconSetCondition.IconSet" /> Eigenschaft in <b>xlCustomSet</b>geändert.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconCriterion.Index" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(486)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(486)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, welcher Schwellenwert die Kriterien darstellen.</summary>
        <value>To be added.</value>
        <remarks><para>Bei einem Symbolsatz gibt diese Eigenschaft den Wert "1" für den kleinsten Schwellenwert zurück, "2" für den nächsten Schwellenwert usw.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Operator">
      <MemberSignature Language="C#" Value="public int Operator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Operator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconCriterion.Operator" />
      <MemberSignature Language="VB.NET" Value="Public Property Operator As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Operator { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(797)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(797)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(797)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt eine der Konstanten der Enumeration zurück, die <see cref="T:Microsoft.Office.Interop.Excel.XlFormatConditionOperator" /> angibt, ob der Schwellenwert "größer als" oder "größer als oder gleich" dem Schwellenwert ist, oder legt diese Konstante fest.</summary>
        <value>To be added.</value>
        <remarks><para>Bei einer Regel zur bedingten Formatierung von Symbolsätzen kann diese Eigenschaft nur auf eine der folgenden Konstanten festgelegt werden: <b>xlGreater</b> oder <b>xlGreaterEqual</b>.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlConditionValueTypes Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlConditionValueTypes Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconCriterion.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As XlConditionValueTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlConditionValueTypes Type { Microsoft::Office::Interop::Excel::XlConditionValueTypes get(); void set(Microsoft::Office::Interop::Excel::XlConditionValueTypes value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlConditionValueTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt eine der Konstanten der <see cref="T:Microsoft.Office.Interop.Excel.XlConditionValueTypes" /> Enumeration zurück, die angibt, wie der Schwellenwert für einen Symbolsatz bestimmt wird. Schreibgeschützt.</summary>
        <value>To be added.</value>
        <remarks><para>Der Typ des Schwellenwerts für einen Symbolsatz kann eine Zahl, ein Prozentwert, eine Formel oder ein Quantil sein. Wenn Sie den Typ auf Quantil festlegen, wird der Schwellenwert mithilfe der Quantilfunktion in Excel bestimmt.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.IconCriterion.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt den Schwellenwert für ein Symbol in einem bedingten Format zurück oder legt diesen fest. <b>Variant</b>-Wert mit Lese-/Schreibzugriff.</summary>
        <value>To be added.</value>
        <remarks><para>Sie können den Wert nur festlegen, wenn die <see cref="P:Microsoft.Office.Interop.Excel.IconCriterion.Type" /> Eigenschaft für das bedingte Format auf eine der folgenden Konstanten festgelegt ist: <b>xlConditionValueNumber</b>, <b>xlConditionValuePercent</b>, <b>xlConditionValuePercentile</b>oder <b>xlConditionValueFormula</b>.</para>
          <para>Wenn der Typ des Schwellenwerts eine Formel ist, können Sie die Formel als <b>Zeichenfolge</b>festlegen. Die Formel muss eine einzelne Zahl zurückgeben.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>