<Type Name="Protection" FullName="Microsoft.Office.Interop.Excel.Protection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="195f588acc3a3d5583fc43fd847eb2ad3603bb30529456a0392154bd24cf0c32" /><Meta Name="ms.sourcegitcommit" Value="daf501296516d104cf396246ac0d336adfeffd0d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/06/2021" /><Meta Name="ms.locfileid" Value="54518986" /></Metadata><TypeSignature Language="C#" Value="public interface Protection" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Protection" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Protection" />
  <TypeSignature Language="VB.NET" Value="Public Interface Protection" />
  <TypeSignature Language="C++ CLI" Value="public interface class Protection" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00024467-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt die verschiedenen Arten von Schutzoptionen dar, die für ein Arbeitsblatt zur Verfügung stehen.</summary>
    <remarks><para>Verwenden Sie die <see cref="P:Microsoft.Office.Interop.Excel._Worksheet.Protection" /> Eigenschaft des <see cref="T:Microsoft.Office.Interop.Excel.Worksheet" /> Objekts, um ein <b>Protection-Objekt</b> zurückzugeben.</para>
      <para>Nachdem ein <b>Protection-Objekt</b> zurückgegeben wurde, können Sie die folgenden Eigenschaften verwenden, um Schutzoptionen festzulegen oder zurückzugeben:</para>
      <list type="bullet">
        <item>
          <description>
            <see cref="P:Microsoft.Office.Interop.Excel.Protection.AllowDeletingColumns" />
          </description>
        </item>
        <item>
          <description>
            <see cref="P:Microsoft.Office.Interop.Excel.Protection.AllowDeletingRows" />
          </description>
        </item>
        <item>
          <description>
            <see cref="P:Microsoft.Office.Interop.Excel.Protection.AllowFiltering" />
          </description>
        </item>
        <item>
          <description>
            <see cref="P:Microsoft.Office.Interop.Excel.Protection.AllowFormattingCells" />
          </description>
        </item>
        <item>
          <description>
            <see cref="P:Microsoft.Office.Interop.Excel.Protection.AllowFormattingColumns" />
          </description>
        </item>
        <item>
          <description>
            <see cref="P:Microsoft.Office.Interop.Excel.Protection.AllowFormattingRows" />
          </description>
        </item>
        <item>
          <description>
            <see cref="P:Microsoft.Office.Interop.Excel.Protection.AllowInsertingColumns" />
          </description>
        </item>
        <item>
          <description>
            <see cref="P:Microsoft.Office.Interop.Excel.Protection.AllowInsertingHyperlinks" />
          </description>
        </item>
        <item>
          <description>
            <see cref="P:Microsoft.Office.Interop.Excel.Protection.AllowInsertingRows" />
          </description>
        </item>
        <item>
          <description>
            <see cref="P:Microsoft.Office.Interop.Excel.Protection.AllowSorting" />
          </description>
        </item>
        <item>
          <description>
            <see cref="P:Microsoft.Office.Interop.Excel.Protection.AllowUsingPivotTables" />
          </description>
        </item>
      </list>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="AllowDeletingColumns">
      <MemberSignature Language="C#" Value="public bool AllowDeletingColumns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowDeletingColumns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Protection.AllowDeletingColumns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowDeletingColumns As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowDeletingColumns { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2038)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2038)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt <b>True</b> zurück, wenn das Löschen von Spalten in einem geschützten Arbeitsblatt zulässig ist.</summary>
        <value>To be added.</value>
        <remarks><para>Die <b>AllowDeletingColumns-Eigenschaft</b> kann mithilfe der <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> Methodenargumente festgelegt werden.</para>
          <para>Die Sperre für die Spalten, die die zu löschenden Zellen enthält, muss aufgehoben werden, wenn das Blatt geschützt ist.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowDeletingRows">
      <MemberSignature Language="C#" Value="public bool AllowDeletingRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowDeletingRows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Protection.AllowDeletingRows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowDeletingRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowDeletingRows { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2039)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2039)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt <b>True</b> zurück, wenn das Löschen von Zeilen in einem geschützten Arbeitsblatt zulässig ist.</summary>
        <value>To be added.</value>
        <remarks><para>Die <b>AllowDeletingRows-Eigenschaft</b> kann mithilfe der <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> Methodenargumente festgelegt werden.</para>
          <para>Die Sperre für die Zeilen, die die zu löschenden Zellen enthalten, muss aufgehoben werden, wenn das Blatt geschützt ist.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowEditRanges">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.AllowEditRanges AllowEditRanges { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.AllowEditRanges AllowEditRanges" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Protection.AllowEditRanges" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowEditRanges As AllowEditRanges" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::AllowEditRanges ^ AllowEditRanges { Microsoft::Office::Interop::Excel::AllowEditRanges ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2236)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2236)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.AllowEditRanges</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.AllowEditRanges" /> Objekt zurück.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowFiltering">
      <MemberSignature Language="C#" Value="public bool AllowFiltering { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowFiltering" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Protection.AllowFiltering" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowFiltering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowFiltering { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2041)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2041)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt <b>True</b> zurück, wenn Benutzer einen AutoFilter verwenden dürfen, der erstellt wurde, bevor das Blatt geschützt wurde.</summary>
        <value>To be added.</value>
        <remarks><para>Die <b>AllowFiltering-Eigenschaft</b> kann mithilfe der <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> Methodenargumente festgelegt werden.</para>
          <para>Die <b>AllowFiltering</b>-Eigenschaft ermöglicht es dem Benutzer, die Filterkriterien für einen vorhandenen AutoFilter zu ändern. Der Benutzer kann für ein geschütztes Arbeitsblatt keinen AutoFilter erstellen oder entfernen.</para>
          <para>Die Sperre für die zu filternden Zellen muss aufgehoben werden, wenn das Blatt geschützt ist.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowFormattingCells">
      <MemberSignature Language="C#" Value="public bool AllowFormattingCells { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowFormattingCells" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Protection.AllowFormattingCells" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowFormattingCells As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowFormattingCells { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2032)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2032)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt <b>True</b> zurück, wenn das Formatieren von Zellen in geschützten Arbeitsblättern zulässig ist.</summary>
        <value>To be added.</value>
        <remarks><para>Die <b>AllowFormattingCells-Eigenschaft</b> kann mithilfe der <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> Methodenargumente festgelegt werden.</para>
          <para>Die Verwendung dieser Eigenschaft deaktiviert die Schutzregisterkarte, sodass der Benutzer alle Formate ändern, aber keine Bereiche entsperren oder einblenden kann.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowFormattingColumns">
      <MemberSignature Language="C#" Value="public bool AllowFormattingColumns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowFormattingColumns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Protection.AllowFormattingColumns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowFormattingColumns As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowFormattingColumns { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2033)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2033)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt <b>True</b> zurück, wenn das Formatieren von Spalten in geschützten Arbeitsblättern zulässig ist.</summary>
        <value>To be added.</value>
        <remarks><para>Die <b>AllowFormattingColumns-Eigenschaft</b> kann mithilfe der <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> Methodenargumente festgelegt werden.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowFormattingRows">
      <MemberSignature Language="C#" Value="public bool AllowFormattingRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowFormattingRows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Protection.AllowFormattingRows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowFormattingRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowFormattingRows { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2034)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2034)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt <b>True</b> zurück, wenn das Formatieren von Zeilen in geschützten Arbeitsblättern zulässig ist.</summary>
        <value>To be added.</value>
        <remarks><para>Die <b>AllowFormattingRows-Eigenschaft</b> kann mithilfe der <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> Methodenargumente festgelegt werden.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowInsertingColumns">
      <MemberSignature Language="C#" Value="public bool AllowInsertingColumns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowInsertingColumns" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Protection.AllowInsertingColumns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowInsertingColumns As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowInsertingColumns { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2035)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2035)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt <b>True</b> zurück, wenn das Einfügen von Spalten in geschützten Arbeitsblättern zulässig ist.</summary>
        <value>To be added.</value>
        <remarks><para>Eine eingefügte Spalte übernimmt ihre Formatierung (standardmäßig) von der Spalte, die links von ihr steht. Das bedeutet, dass diese möglicherweise über gesperrte Zellen verfügt und die Benutzer vielleicht nicht in der Lage sind, die von ihnen eingefügten Spalten wieder zu löschen.</para>
          <para>Die <b>AllowInsertingColumns-Eigenschaft</b> kann mithilfe der <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> Methodenargumente festgelegt werden.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowInsertingHyperlinks">
      <MemberSignature Language="C#" Value="public bool AllowInsertingHyperlinks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowInsertingHyperlinks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Protection.AllowInsertingHyperlinks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowInsertingHyperlinks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowInsertingHyperlinks { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2037)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2037)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt <b>True</b> zurück, wenn das Einfügen von Hyperlinks in geschützten Arbeitsblättern zulässig ist.</summary>
        <value>To be added.</value>
        <remarks><para>Hyperlinks können nur in Zellen eines geschützten Arbeitsblatts eingefügt werden, die ungeschützt sind oder keine Sperre besitzen.</para>
          <para>Die <b>AllowInsertingHyperlinks-Eigenschaft</b> kann mithilfe der <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> Methodenargumente festgelegt werden.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowInsertingRows">
      <MemberSignature Language="C#" Value="public bool AllowInsertingRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowInsertingRows" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Protection.AllowInsertingRows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowInsertingRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowInsertingRows { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2036)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2036)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt <b>True</b> zurück, wenn das Einfügen von Zeilen in geschützten Arbeitsblättern zulässig ist.</summary>
        <value>To be added.</value>
        <remarks><para>Die <b>AllowInsertingRows-Eigenschaft</b> kann mithilfe der <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> Methodenargumente festgelegt werden.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowSorting">
      <MemberSignature Language="C#" Value="public bool AllowSorting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowSorting" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Protection.AllowSorting" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowSorting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowSorting { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2040)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2040)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt <b>True</b> zurück, wenn die Sortieroption für ein geschütztes Arbeitsblatt zulässig ist.</summary>
        <value>To be added.</value>
        <remarks><para>In einem geschützten Arbeitsblatt kann die Sortierung nur für nicht gesperrte oder ungeschützte Zellen ausgeführt werden.</para>
          <para>Die <b>AllowSorting-Eigenschaft</b> kann mithilfe der <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> Methodenargumente festgelegt werden.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowUsingPivotTables">
      <MemberSignature Language="C#" Value="public bool AllowUsingPivotTables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowUsingPivotTables" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Protection.AllowUsingPivotTables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowUsingPivotTables As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowUsingPivotTables { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2042)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2042)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt <b>True zurück,</b> wenn der Benutzer PivotTables in einem geschützten Arbeitsblatt bearbeiten darf.</summary>
        <value>To be added.</value>
        <remarks><para>Die <b>AllowUsingPivotTables</b>-Eigenschaft gilt für Nicht-OLAP-Quelldaten.</para>
          <para>Die <b>AllowUsingPivotTables-Eigenschaft</b> kann mithilfe der <see cref="M:Microsoft.Office.Interop.Excel._Workbook.Protect(System.Object,System.Object,System.Object)" /> Methodenargumente festgelegt werden.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>