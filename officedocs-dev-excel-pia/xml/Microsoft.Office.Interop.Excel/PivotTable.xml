<Type Name="PivotTable" FullName="Microsoft.Office.Interop.Excel.PivotTable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3adc582d805c6c63aa2301fb45e65416c52208390707a5ae643559dbbe4dfc4a" /><Meta Name="ms.sourcegitcommit" Value="daf501296516d104cf396246ac0d336adfeffd0d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/06/2021" /><Meta Name="ms.locfileid" Value="54507814" /></Metadata><TypeSignature Language="C#" Value="public interface PivotTable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract PivotTable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.PivotTable" />
  <TypeSignature Language="VB.NET" Value="Public Interface PivotTable" />
  <TypeSignature Language="C++ CLI" Value="public interface class PivotTable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00020872-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt einen PivotTable-Bericht auf einem Arbeitsblatt dar. Das <b>PivotTable-Objekt</b> ist ein Element der <see cref="T:Microsoft.Office.Interop.Excel.PivotTables" /> Auflistung. Die <b>PivotTables</b> -Auflistung umfasst alle <b>PivotTable</b> -Objekte eines einzelnen Arbeitsblatts.</summary>
    <remarks><para>Verwenden Sie <b>PivotTables</b>( <paramref name="index" /> ), wobei es sich um die <paramref name="index" /> Indexnummer oder den Namen der PivotTable handelt, um ein einzelnes <b>PivotTable-Objekt</b> zurückzugeben.</para>
      <para>Da die Programmierung von PivotTable-Berichten komplex sein kann, besteht der leichteste Weg häufig darin, die Aktionen für den PivotTable-Bericht aufzuzeichnen und den Code anschließend zu überarbeiten. Zeigen Sie zum Aufzeichnen eines Makros im Menü "Extras" auf "Makro", und klicken Sie dann auf "Neues Makro aufzeichnen".</para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="_Default">
      <MemberSignature Language="C#" Value="public string this { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string _Default" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable._Default" />
      <MemberSignature Language="VB.NET" Value="Default Public Property _Default As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(1024)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Für interne Zwecke vorbehalten. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_PivotSelect">
      <MemberSignature Language="C#" Value="public void _PivotSelect (string Name, Microsoft.Office.Interop.Excel.XlPTSelectionMode Mode = Microsoft.Office.Interop.Excel.XlPTSelectionMode.xlDataAndLabel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void _PivotSelect([in]string Name, [in]valuetype Microsoft.Office.Interop.Excel.XlPTSelectionMode Mode) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.PivotTable._PivotSelect(System.String,Microsoft.Office.Interop.Excel.XlPTSelectionMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub _PivotSelect (Name As String, Optional Mode As XlPTSelectionMode = Microsoft.Office.Interop.Excel.XlPTSelectionMode.xlDataAndLabel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2087)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(1088)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="Mode" Type="Microsoft.Office.Interop.Excel.XlPTSelectionMode" />
      </Parameters>
      <Docs>
        <param name="Name">To be added.</param>
        <param name="Mode">To be added.</param>
        <summary>Für interne Zwecke vorbehalten.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveFilters">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotFilters ActiveFilters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PivotFilters ActiveFilters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.ActiveFilters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveFilters As PivotFilters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PivotFilters ^ ActiveFilters { Microsoft::Office::Interop::Excel::PivotFilters ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2559)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2559)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotFilters</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt den derzeit aktiven Filter in der angegebenen <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> an. Schreibgeschützt.</summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.PivotFilters" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDataField">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotField AddDataField (object Field, object Caption, object Function);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.PivotField AddDataField([in]object Field, [in]object Caption, [in]object Function) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.PivotTable.AddDataField(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddDataField (Field As Object, Optional Caption As Object, Optional Function As Object) As PivotField" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2122)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotField</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Field" Type="System.Object" />
        <Parameter Name="Caption" Type="System.Object" />
        <Parameter Name="Function" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Field"><b>Required-Objekt</b>. Das eindeutige Feld auf dem Server. Wenn es sich bei den Quelldaten um OLAP-Daten (Online Analytical Processing) handelt, ist das eindeutige Feld ein Cubefeld. Wenn es sich nicht um OLAP-Quelldaten handelt (Nicht-OLAP-Quelldaten), ist das eindeutige Feld ein PivotTable-Feld.</param>
        <param name="Caption"><b>Optional-Objekt</b>. Die im PivotTable-Bericht verwendete Beschriftung, um dieses Datenfeld zu kennzeichnen.</param>
        <param name="Function"><b>Optional-Objekt</b>. Die im hinzugefügten Datenfeld durchgeführte Funktion.</param>
        <summary>Fügt ein Datenfeld zu einem PivotTable-Bericht hinzu. Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> Objekt zurück, das das neue Datenfeld darstellt.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFields">
      <MemberSignature Language="C#" Value="public object AddFields (object RowFields, object ColumnFields, object PageFields, object AddToTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AddFields([in]object RowFields, [in]object ColumnFields, [in]object PageFields, [in]object AddToTable) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.PivotTable.AddFields(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddFields (Optional RowFields As Object, Optional ColumnFields As Object, Optional PageFields As Object, Optional AddToTable As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(708)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RowFields" Type="System.Object" />
        <Parameter Name="ColumnFields" Type="System.Object" />
        <Parameter Name="PageFields" Type="System.Object" />
        <Parameter Name="AddToTable" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="RowFields"><b>Optional-Objekt</b>. Gibt einen Feldnamen (oder ein Array von Feldnamen) an, der als Zeilen oder zur Rubrikenachse hinzugefügt werden soll.</param>
        <param name="ColumnFields"><b>Optional-Objekt</b>. Gibt einen Feldnamen (oder ein Array von Feldnamen) an, der als Spalten oder zur Datenreihenachse hinzugefügt werden soll.</param>
        <param name="PageFields"><b>Optional-Objekt</b>. Gibt einen Feldnamen (oder ein Array von Feldnamen) an, der als Seiten hinzugefügt oder dem Seitenbereich hinzugefügt werden soll.</param>
        <param name="AddToTable"><b>Optional-Objekt</b>. Gilt nur für PivotTable-Berichte. Beim Wert <b>True</b> werden dem Bericht die angegebenen Felder hinzugefügt (ohne die vorhandenen Felder zu ersetzen). Beim Wert <b>False</b> werden die vorhandenen Felder durch die neuen Felder ersetzt. Der Standardwert ist <b>Falsch</b>.</param>
        <summary>Fügt dem PivotTable-Bericht oder PivotChart-Bericht Zeilen-, Spalten- und Seitenfelder hinzu.</summary>
        <returns>To be added.</returns>
        <remarks><para>Sie müssen eines der Feldargumente angeben.</para>
          <para>Feldnamen geben den eindeutigen Namen an, der von der Eigenschaft des Objekts zurückgegeben <see cref="P:Microsoft.Office.Interop.Excel.PivotField.SourceName" /> <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> wird.</para>
          <para>Diese Methode steht für OLAP-Datenquellen nicht zur Verfügung.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AllocateChanges">
      <MemberSignature Language="C#" Value="public void AllocateChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AllocateChanges() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.PivotTable.AllocateChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub AllocateChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AllocateChanges();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2855)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Führt einen Rückschreibvorgang für alle bearbeiteten Zellen in einem PivotTable-Bericht auf der Grundlage einer OLAP-Datenquelle aus.</summary>
        <remarks><para>Die <see cref="M:Microsoft.Office.Interop.Excel.PivotTable.AllocateChanges" /> Methode führt eine UPDATE CUBE-Anweisung für alle Änderungen aus, die im Wertebereich der PivotTable seit dem Letzten Übernehmen des Änderungsvorgangs oder seit dem Erstellen der PivotTable vorgenommen wurden, wenn das Commit angewendeter Änderungen nie ausgeführt wurde. Diese Methode erzeugt einen Laufzeitfehler, wenn sie für eine PivotTable ausgeführt wird, die nicht auf einer OLAP-Datenquelle basiert.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Allocation">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlAllocation Allocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlAllocation Allocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.Allocation" />
      <MemberSignature Language="VB.NET" Value="Public Property Allocation As XlAllocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlAllocation Allocation { Microsoft::Office::Interop::Excel::XlAllocation get(); void set(Microsoft::Office::Interop::Excel::XlAllocation value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2873)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2873)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2873)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlAllocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt fest, ob eine <b>UPDATE CUBE-Anweisung</b> für jede Zelle bearbeitet wird, oder nur, wenn der Benutzer beim Ausführen einer Was-wäre-wäre-wenn-Analyse auf einer PivotTable basierend auf einer OLAP-Datenquelle Änderungen berechnet.</summary>
        <value>Ein <see cref="T:Microsoft.Office.Interop.Excel.XlAllocation" /> Objekt.</value>
        <remarks><para>Lese-/Schreibzugriff.</para>
          <para>Die <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.Allocation" /> Eigenschaft entspricht der Einstellung Berechnen mit Änderungen im Dialogfeld What-If Analyse Einstellungen. Die Standardeinstellung ist <see cref="F:Microsoft.Office.Interop.Excel.XlAllocation.xlManualAllocation" /> , die der Einstellung manuell (beim Auswählen von PivotTable mit Änderungen berechnen) entspricht.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AllocationMethod">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlAllocationMethod AllocationMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlAllocationMethod AllocationMethod" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.AllocationMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property AllocationMethod As XlAllocationMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlAllocationMethod AllocationMethod { Microsoft::Office::Interop::Excel::XlAllocationMethod get(); void set(Microsoft::Office::Interop::Excel::XlAllocationMethod value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2875)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2875)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2875)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlAllocationMethod</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt fest, welche Methode zum Zuordnen von Werten beim Ausführen einer Was-wäre-wenn-Analyse für einen PivotTable-Bericht auf der Grundlage einer OLAP-Datenquelle verwendet werden soll.</summary>
        <value>Ein <see cref="T:Microsoft.Office.Interop.Excel.XlAllocationMethod" /> Objekt.</value>
        <remarks><para>Lese-/Schreibzugriff.</para>
          <para>Die <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.AllocationMethod" /> Eigenschaft entspricht der Einstellung Allocation Method im Dialogfeld What-If Analyse Einstellungen . Die Standardeinstellung ist <see cref="F:Microsoft.Office.Interop.Excel.XlAllocationMethod.xlEqualAllocation" /> , die der Einstellung "Zuordnung gleich" entspricht. Wenn die Eigenschaft auf festgelegt ist, was der Einstellung für <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.AllocationMethod" /> die <see cref="F:Microsoft.Office.Interop.Excel.XlAllocationMethod.xlWeightedAllocation" /> gewichtete Zuordnung entspricht, können Sie optional den zu verwendenden Gewichtungsausdruck angeben, indem Sie die <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.AllocationWeightExpression" /> Eigenschaft festlegen. Wenn Sie keinen Gewichtungsausdruck angeben, wird ein Gewichtungsausdruck verwendet, der dem vorhandenen Wert der &lt; Blattzelle &gt;  /  &lt; &gt; entspricht.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AllocationValue">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlAllocationValue AllocationValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlAllocationValue AllocationValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.AllocationValue" />
      <MemberSignature Language="VB.NET" Value="Public Property AllocationValue As XlAllocationValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlAllocationValue AllocationValue { Microsoft::Office::Interop::Excel::XlAllocationValue get(); void set(Microsoft::Office::Interop::Excel::XlAllocationValue value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2874)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2874)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2874)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlAllocationValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt diesen fest, welcher Wert zugeordnet werden soll, wenn eine Was-wäre-wäre-wenn-Analyse für einen PivotTable-Bericht basierend auf einer OLAP-Datenquelle ausgeführt wird.</summary>
        <value>Ein <see cref="T:Microsoft.Office.Interop.Excel.XlAllocationValue" /> Objekt.</value>
        <remarks><para>Lese-/Schreibzugriff.</para>
          <para>Die <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.AllocationValue" /> Eigenschaft entspricht der Einstellung Wert zuzuweisen im Dialogfeld What-If Analyse Einstellungen. Die Standardeinstellung ist <see cref="F:Microsoft.Office.Interop.Excel.XlAllocationValue.xlAllocateValue" /> , die dem eingegebenen Wert dividiert durch die Anzahl der Zuordnungseinstellungen entspricht.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AllocationWeightExpression">
      <MemberSignature Language="C#" Value="public string AllocationWeightExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AllocationWeightExpression" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.AllocationWeightExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property AllocationWeightExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AllocationWeightExpression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2876)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2876)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2876)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den MDX-Gewichtungsausdruck ab, der beim Ausführen einer Was-wäre-wenn-Analyse für einen PivotTable-Bericht auf der Grundlage einer OLAP-Datenquelle verwendet werden soll, oder legt diesen fest.</summary>
        <value>Der MDX-Gewichtungsausdruck, der beim Ausführen einer Was-wäre-wäre-wenn-Analyse für einen PivotTable-Bericht basierend auf einer OLAP-Datenquelle verwendet werden soll.</value>
        <remarks><para>Lese-/Schreibzugriff.</para>
          <para>Die <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.AllocationWeightExpression" /> Eigenschaft entspricht der Einstellung für den Gewichtungsausdruck im Dialogfeld What-If Analyse Einstellungen. Bevor die <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.AllocationWeightExpression" /> Eigenschaft festgelegt werden kann, müssen Sie die <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.AllocationMethod" /> Eigenschaft auf <see cref="F:Microsoft.Office.Interop.Excel.XlAllocationMethod.xlWeightedAllocation" /> .</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowMultipleFilters">
      <MemberSignature Language="C#" Value="public bool AllowMultipleFilters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowMultipleFilters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.AllowMultipleFilters" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowMultipleFilters As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowMultipleFilters { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2570)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2570)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2570)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Legt einen Wert fest oder ruft ihn ab, der angibt, ob mehrere <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> Filter gleichzeitig auf ihn angewendet werden können.
Lese-/Schreibzugriff.</summary>
        <value><b>Boolescher Wert</b></value>
        <remarks><para>Standardwert ist <b>False</b>.</para>
          <para>Wenn diese Eigenschaft auf <b>True</b>festgelegt ist, können mehrere Filter auf eine einzelne angewendet <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> werden. Wenn der Wert auf <b>"False"</b>festgelegt ist, wird durch Anwenden eines Filters auf einen <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> filter, der bereits gefiltert ist, der vorhandene Filter entfernt und der neue Filter angewendet.

Wird diese Eigenschaft auf <b>"False"</b> festgelegt, wenn <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" />  Felder mit mehr als einem Filter angewendet wurden, werden im Hintergrund alle Filter entfernt, ohne dass eine Warnung angezeigt <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" />  wird. Beim Ausführen dieses Vorgangs über die Benutzeroberfläche wird jedoch eine Benachrichtigung angezeigt.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AlternativeText">
      <MemberSignature Language="C#" Value="public string AlternativeText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AlternativeText" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.AlternativeText" />
      <MemberSignature Language="VB.NET" Value="Public Property AlternativeText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AlternativeText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1891)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1891)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1891)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die beschreibende (alternative) Textzeichenfolge für die angegebene PivotTable ab oder legt sie fest.</summary>
        <value>Die beschreibende (alternative) Textzeichenfolge für die angegebene PivotTable.</value>
        <remarks><para>Lese-/Schreibzugriff.</para>
          <para>Der Wert der <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.AlternativeText" /> Eigenschaft entspricht dem Wert im Feld "Titel" auf der Registerkarte "Alt-Text" des Dialogfelds "PivotTable-Optionen".</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Application" /> Objekt zurück, das die Microsoft Excel Anwendung darstellt. Schreibgeschützt.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheIndex">
      <MemberSignature Language="C#" Value="public int CacheIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CacheIndex" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.CacheIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property CacheIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CacheIndex { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1483)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1483)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1483)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt den Index des PivotTable-Cache zurück oder legt ihn fest. <b>Ganze Zahl</b> mit Lese-/Schreibzugriff.</summary>
        <value>To be added.</value>
        <remarks><para>Wenn Sie die <b>CacheIndex</b>-Eigenschaft so festlegen, dass ein PivotTable-Bericht den Cache für einen zweiten PivotTable-Bericht verwendet, müssen die Felder des ersten Berichts eine zulässige Untermenge der Felder des zweiten Berichts sein.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculatedFields">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.CalculatedFields CalculatedFields ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.CalculatedFields CalculatedFields() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.PivotTable.CalculatedFields" />
      <MemberSignature Language="VB.NET" Value="Public Function CalculatedFields () As CalculatedFields" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::CalculatedFields ^ CalculatedFields();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1484)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.CalculatedFields</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine <see cref="T:Microsoft.Office.Interop.Excel.CalculatedFields" /> Auflistung zurück, die alle berechneten Felder im angegebenen PivotTable-Bericht darstellt. Schreibgeschützt.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculatedMembers">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.CalculatedMembers CalculatedMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.CalculatedMembers CalculatedMembers" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.CalculatedMembers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CalculatedMembers As CalculatedMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::CalculatedMembers ^ CalculatedMembers { Microsoft::Office::Interop::Excel::CalculatedMembers ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2125)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2125)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.CalculatedMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt eine <see cref="T:Microsoft.Office.Interop.Excel.CalculatedMembers" /> Auflistung zurück, die alle berechneten Elemente und berechneten Kennzahlen für eine OLAP-PivotTable darstellt.</summary>
        <value>To be added.</value>
        <remarks><para>Diese Eigenschaft wird für OLAP-Quellen (Online Analytical Processing) verwendet. Bei Nicht-OLAP-Quellen wird ein Laufzeitfehler zurückgegeben.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculatedMembersInFilters">
      <MemberSignature Language="C#" Value="public bool CalculatedMembersInFilters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CalculatedMembersInFilters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.CalculatedMembersInFilters" />
      <MemberSignature Language="VB.NET" Value="Public Property CalculatedMembersInFilters As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CalculatedMembersInFilters { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2884)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2884)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2884)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt fest, ob berechnete Elemente von OLAP-Servern in Filtern ausgewertet werden sollen.</summary>
        <value><b>true,</b> wenn berechnete Elemente von OLAP-Servern in Filtern ausgewertet werden sollen; andernfalls <b>false</b>.</value>
        <remarks><para>Lese-/Schreibzugriff.</para>
          <para>
            <b>true,</b> wenn berechnete Elemente in Filtern ausgewertet werden; andernfalls <b>false</b>.</para>
          <para>Der Wert dieser Eigenschaft entspricht der Einstellung des Kontrollkästchens "Berechnete Elemente von OLAP-Servern auswerten" auf der Registerkarte "Filter &amp; insgesamt" des Dialogfelds "PivotTable-Optionen" für einen PivotTable-Bericht, der auf einer OLAP-Datenquelle basiert.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeConnection">
      <MemberSignature Language="C#" Value="public void ChangeConnection (Microsoft.Office.Interop.Excel.WorkbookConnection conn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ChangeConnection([in]class Microsoft.Office.Interop.Excel.WorkbookConnection conn) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.PivotTable.ChangeConnection(Microsoft.Office.Interop.Excel.WorkbookConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChangeConnection (conn As WorkbookConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ChangeConnection(Microsoft::Office::Interop::Excel::WorkbookConnection ^ conn);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2575)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="conn" Type="Microsoft.Office.Interop.Excel.WorkbookConnection" />
      </Parameters>
      <Docs>
        <param name="conn">Erforderliches <see cref="T:Microsoft.Office.Interop.Excel.WorkbookConnection" /> Objekt, das die neue Verbindung für die <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> darstellt.</param>
        <summary>Ändert die Verbindung der angegebenen <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> .</summary>
        <remarks><para>Die <see cref="M:Microsoft.Office.Interop.Excel.PivotTable.ChangeConnection(Microsoft.Office.Interop.Excel.WorkbookConnection)" /> Methode kann nur mit einer Verwendet <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" />  werden, die mit einer externen Datenquelle verbunden ist. Ein Laufzeitfehler tritt auf, wenn die <see cref="M:Microsoft.Office.Interop.Excel.PivotTable.ChangeConnection(Microsoft.Office.Interop.Excel.WorkbookConnection)" /> Methode mit einer verwendet <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> wird, die in einem Arbeitsblatt gespeicherte Daten als Datenquelle verwendet.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeList">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotTableChangeList ChangeList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PivotTableChangeList ChangeList" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.ChangeList" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChangeList As PivotTableChangeList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PivotTableChangeList ^ ChangeList { Microsoft::Office::Interop::Excel::PivotTableChangeList ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2880)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2880)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotTableChangeList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die <see cref="T:Microsoft.Office.Interop.Excel.PivotTableChangeList" /> Auflistung ab, die die Liste der Änderungen darstellt, die an der angegebenen PivotTable basierend auf einer OLAP-Datenquelle vorgenommen wurden.</summary>
        <value>Die <see cref="T:Microsoft.Office.Interop.Excel.PivotTableChangeList" /> Auflistung, die die Liste der Änderungen darstellt, die an der angegebenen PivotTable basierend auf einer OLAP-Datenquelle vorgenommen wurden.</value>
        <remarks><para>Schreibgeschützt.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangePivotCache">
      <MemberSignature Language="C#" Value="public void ChangePivotCache (object PivotCache);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ChangePivotCache([in]object PivotCache) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.PivotTable.ChangePivotCache(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChangePivotCache (PivotCache As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ChangePivotCache(System::Object ^ PivotCache);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2577)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PivotCache" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="PivotCache">Required <b>String</b> a <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> or object that represents the new for the <see cref="T:Microsoft.Office.Interop.Excel.PivotCache" />  specified <see cref="T:Microsoft.Office.Interop.Excel.PivotCache" /> <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> .</param>
        <summary>Ändert die <see cref="T:Microsoft.Office.Interop.Excel.PivotCache" /> angegebene <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> .</summary>
        <remarks><para>Die <see cref="M:Microsoft.Office.Interop.Excel.PivotTable.ChangePivotCache(System.Object)" /> Methode kann nur mit einer Verwendet <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" />  werden, die auf einem Arbeitsblatt gespeicherte Daten als Datenquelle verwendet. Wenn die Methode mit einer mit <see cref="M:Microsoft.Office.Interop.Excel.PivotTable.ChangePivotCache(System.Object)" /> einer externen Datenquelle verbundenen Methode verwendet wird, tritt ein Laufzeitfehler <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> auf.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearAllFilters">
      <MemberSignature Language="C#" Value="public void ClearAllFilters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearAllFilters() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.PivotTable.ClearAllFilters" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearAllFilters ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearAllFilters();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2561)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Die <see cref="M:Microsoft.Office.Interop.Excel.PivotTable.ClearAllFilters" /> Methode löscht alle Filter, die derzeit auf die angewendet <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> werden. Dazu gehören das Löschen aller Filter in der <see cref="T:Microsoft.Office.Interop.Excel.PivotFilters" /> Auflistung des Objekts, das <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> Entfernen von manuell angewendeten Filtern und das Festlegen aller <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> Filter im Bereich "Berichtsfilter" auf das Standardelement.</summary>
        <remarks><para>Nach dem Aufrufen der <see cref="M:Microsoft.Office.Interop.Excel.PivotTable.ClearAllFilters" /> Methode ist die Auflistung <see cref="T:Microsoft.Office.Interop.Excel.PivotFilters" /> leer.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearTable">
      <MemberSignature Language="C#" Value="public void ClearTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearTable() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.PivotTable.ClearTable" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearTable ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearTable();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2552)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Die <see cref="M:Microsoft.Office.Interop.Excel.PivotTable.ClearTable" /> Methode wird zum Löschen einer <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> . Das Löschen <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> von S umfasst das Entfernen aller Felder und das Löschen aller filter- und sortiervorgänge auf die <see cref="T:Microsoft.Office.Interop.Excel.PivotTables" /> . Diese Methode setzt den <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> Zustand zurück, den sie unmittelbar nach der Erstellung hatte, bevor Felder hinzugefügt wurden.</summary>
        <remarks><para>Die <see cref="M:Microsoft.Office.Interop.Excel.PivotTable.ClearTable" /> Funktion verwendet keine Argumente und ist sowohl für relationale als auch für OLAP-Objekte <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> verfügbar. </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnFields">
      <MemberSignature Language="C#" Value="public object ColumnFields[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ColumnFields(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.ColumnFields(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ColumnFields(Optional Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ColumnFields[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(713)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(713)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><b>Optional-Objekt</b>. Der Name oder die Nummer des Felds (kann ein Array zur Angabe mehrerer Felder sein).</param>
        <summary>Gibt ein Objekt zurück, das ein einzelnes PivotTable-Feld (ein <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> Objekt) oder eine Auflistung aller Felder (ein <see cref="T:Microsoft.Office.Interop.Excel.PivotFields" /> Objekt) darstellt, die derzeit als Spaltenfelder angezeigt werden. Schreibgeschützt.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnGrand">
      <MemberSignature Language="C#" Value="public bool ColumnGrand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ColumnGrand" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.ColumnGrand" />
      <MemberSignature Language="VB.NET" Value="Public Property ColumnGrand As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ColumnGrand { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(694)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(694)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(694)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b>True</b>, wenn im PivotTable-Bericht Spaltengesamtergebnisse angezeigt werden. <b>Boolean</b>-Wert mit Lese-/Schreibzugriff.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnRange">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range ColumnRange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range ColumnRange" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.ColumnRange" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ColumnRange As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ ColumnRange { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(702)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(702)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt zurück, das den Bereich darstellt, der den Spaltenbereich im PivotTable-Bericht enthält. Schreibgeschützt.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommitChanges">
      <MemberSignature Language="C#" Value="public void CommitChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CommitChanges() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.PivotTable.CommitChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub CommitChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CommitChanges();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2877)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Führt einen Commitvorgang für die Datenquelle eines PivotTable-Berichts aus, der auf einer OLAP-Datenquelle basiert.</summary>
        <remarks><para>Die <see cref="M:Microsoft.Office.Interop.Excel.PivotTable.CommitChanges" /> Methode sendet eine COMMIT TRANSACTION-Anweisung an den OLAP-Server und löscht alle Zellen, die durch Eingabe eines Werts bearbeitet wurden, löscht jedoch keine Formeln in Wertzellen. Diese Methode erzeugt einen Laufzeitfehler, wenn sie für eine PivotTable ausgeführt wird, die nicht auf einer OLAP-Datenquelle basiert.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CompactLayoutColumnHeader">
      <MemberSignature Language="C#" Value="public string CompactLayoutColumnHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CompactLayoutColumnHeader" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.CompactLayoutColumnHeader" />
      <MemberSignature Language="VB.NET" Value="Public Property CompactLayoutColumnHeader As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CompactLayoutColumnHeader { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2572)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2572)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2572)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt die Beschriftung an, die in der Spaltenüberschrift eines <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> Kompaktzeilenlayouts angezeigt wird. Lese-/Schreibzugriff.</summary>
        <value>Zeichenfolge</value>
        <remarks><para>Wenn der Benutzer diese Beschriftungen im Raster anpasst, spiegelt sich dies außerdem in diesen Eigenschaften wider.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CompactLayoutRowHeader">
      <MemberSignature Language="C#" Value="public string CompactLayoutRowHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CompactLayoutRowHeader" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.CompactLayoutRowHeader" />
      <MemberSignature Language="VB.NET" Value="Public Property CompactLayoutRowHeader As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CompactLayoutRowHeader { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2571)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2571)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2571)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt die Beschriftung an, die in der Zeilenüberschrift eines <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> Kompaktzeilenlayouts angezeigt wird. Lese-/Schreibzugriff.</summary>
        <value><b>String</b></value>
        <remarks><para>Wenn der Benutzer diese Beschriftungen im Raster anpasst, spiegelt sich dies außerdem in diesen Eigenschaften wider.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CompactRowIndent">
      <MemberSignature Language="C#" Value="public int CompactRowIndent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CompactRowIndent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.CompactRowIndent" />
      <MemberSignature Language="VB.NET" Value="Public Property CompactRowIndent As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CompactRowIndent { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2553)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2553)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2553)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt den Einzugsschritt zurück, wenn das Kompakte Zeilenlayout-Formular aktiviert ist, oder legt den Einzug <see cref="T:Microsoft.Office.Interop.Excel.PivotItems" /> fest. Lese-/Schreibzugriff.</summary>
        <value><b>Integer</b></value>
        <remarks><para>Der Standardwert ist 1. Die gültigen Werte für diese Einstellung sind 0 bis zum maximalen in Microsoft Excel angegebenen Einzug.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertToFormulas">
      <MemberSignature Language="C#" Value="public void ConvertToFormulas (bool ConvertFilters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ConvertToFormulas([in]bool ConvertFilters) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.PivotTable.ConvertToFormulas(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ConvertToFormulas (ConvertFilters As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ConvertToFormulas(bool ConvertFilters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2568)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ConvertFilters" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ConvertFilters">Erforderlicher <b>Boolean</b> Contains <b>True</b> or <b>False</b> to indicate the state of the ReportFilter area.</param>
        <summary>Die <see cref="M:Microsoft.Office.Interop.Excel.PivotTable.ConvertToFormulas(System.Boolean)" /> Methode ist neu in 1st_Excel12 und wird zum Konvertieren von Formeln in <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> Cubes verwendet.</summary>
        <remarks><para>Das Argument steuert, ob der ReportFilter-Bereich der konvertiert werden <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> soll. </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCubeFile">
      <MemberSignature Language="C#" Value="public string CreateCubeFile (string File, object Measures, object Levels, object Members, object Properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string CreateCubeFile([in]string File, [in]object Measures, [in]object Levels, [in]object Members, [in]object Properties) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.PivotTable.CreateCubeFile(System.String,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCubeFile (File As String, Optional Measures As Object, Optional Levels As Object, Optional Members As Object, Optional Properties As Object) As String" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2131)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="File" Type="System.String" />
        <Parameter Name="Measures" Type="System.Object" />
        <Parameter Name="Levels" Type="System.Object" />
        <Parameter Name="Members" Type="System.Object" />
        <Parameter Name="Properties" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="File"><b>String</b> erforderlich. Der Name der zu erstellenden Cubedatei. Wenn die Datei bereits vorhanden ist, wird diese überschrieben.</param>
        <param name="Measures"><b>Optional-Objekt</b>. Ein Array eindeutiger Namen von Measures, die Bestandteil des Segments sein sollen.</param>
        <param name="Levels"><b>Optional-Objekt</b>. Ein Array mit Zeichenfolgen. Jedes Arrayelement stellt einen eindeutigen Ebenennamen dar. Es stellt die unterste Ebene einer Hierarchie dar, die sich in dem Segment befindet.</param>
        <param name="Members"><b>Optional-Objekt</b>. Ein Array von Zeichenfolgenarrays. Die Elemente entsprechen in der angegebenen Reihenfolge den Hierarchien, die im Array dargestellt <paramref name="Levels" /> werden. Jedes Element stellt ein Array von Zeichenfolgenarrays dar, die aus eindeutigen Namen der Elemente der obersten Ebene in der Dimension bestehen, die in das Segment einbezogen werden sollen.</param>
        <param name="Properties">Optionaler <b>Boolean</b>-Wert. Der Wert <b>False</b> führt dazu, dass keine Elementeigenschaften in das Segment einbezogen werden. Der Standardwert ist <b>True</b>.</param>
        <summary>Erstellt eine Cubedatei aus einem PivotTable-Bericht, der mit einer OLAP-Datenquelle (Online Analytical Processing) verbunden ist.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt einen ganzzahligen 32-Bit-Wert zurück, der die Anwendung angibt, in der dieses Objekt erstellt wurde. Wenn das Objekt in Microsoft Excel erstellt wurde, gibt die Eigenschaft die Zeichenfolge XCEL zurück, die der Hexadezimalzahl 5843454C entspricht. Schreibgeschützt. <see cref="T:Microsoft.Office.Interop.Excel.XlCreator" /></summary>
        <value>To be added.</value>
        <remarks><para>Die <b>Creator</b>-Eigenschaft wurde speziell für den Einsatz in Microsoft Excel für den Macintosh geschaffen, wo jede Anwendung einen Urhebercode aus vier Zeichen besitzt. Der Urhebercode für Microsoft Excel lautet "XCEL".</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="CubeFields">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.CubeFields CubeFields { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.CubeFields CubeFields" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.CubeFields" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CubeFields As CubeFields" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::CubeFields ^ CubeFields { Microsoft::Office::Interop::Excel::CubeFields ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1839)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1839)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.CubeFields</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt die <see cref="T:Microsoft.Office.Interop.Excel.CubeFields" /> Auflistung zurück. Jedes <see cref="T:Microsoft.Office.Interop.Excel.CubeField" /> Objekt enthält die Eigenschaften des Cubefeldelements. Schreibgeschützt.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBodyRange">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range DataBodyRange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range DataBodyRange" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.DataBodyRange" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataBodyRange As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ DataBodyRange { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(705)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(705)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt zurück, das den Bereich darstellt, der den Datenbereich in der Liste zwischen der Kopfzeile und der Einfügezeile enthält. Schreibgeschützt.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataFields">
      <MemberSignature Language="C#" Value="public object DataFields[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataFields(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.DataFields(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataFields(Optional Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataFields[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(715)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(715)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><b>Optional-Objekt</b>. Der Name oder die Nummer des Felds (kann ein Array zur Angabe mehrerer Felder sein).</param>
        <summary>Gibt ein Objekt zurück, das ein einzelnes PivotTable-Feld (ein <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> Objekt) oder eine Auflistung aller Felder (ein <see cref="T:Microsoft.Office.Interop.Excel.PivotFields" /> Objekt) darstellt, die derzeit als Datenfelder angezeigt werden. Schreibgeschützt.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataLabelRange">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range DataLabelRange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range DataLabelRange" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.DataLabelRange" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataLabelRange As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ DataLabelRange { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(704)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(704)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt zurück, das den Bereich darstellt, der die Beschriftungen für die Datenfelder im PivotTable-Bericht enthält. Schreibgeschützt.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataPivotField">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotField DataPivotField { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PivotField DataPivotField" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.DataPivotField" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataPivotField As PivotField" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PivotField ^ DataPivotField { Microsoft::Office::Interop::Excel::PivotField ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2120)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2120)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotField</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> Objekt zurück, das alle Datenfelder in einer PivotTable darstellt. Schreibgeschützt.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiscardChanges">
      <MemberSignature Language="C#" Value="public void DiscardChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DiscardChanges() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.PivotTable.DiscardChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub DiscardChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DiscardChanges();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2856)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Verwirft alle Änderungen an den bearbeiteten Zellen eines PivotTable-Berichts basierend auf einer OLAP-Datenquelle.</summary>
        <remarks><para>Bei einem PivotTable-Bericht, der auf einer OLAP-Datenquelle basiert, entfernt die Methode alle in Wertzellen eingegebenen Werte und Formeln und führt dann einen PivotTable-Aktualisierungsvorgang aus, um die neuesten Werte aus der Datenquelle abzurufen. Der Datenquellenwert wird auf einen Nullverweis (Nothing in Visual Basic) für alle bearbeiteten Wertzellen festgelegt und eine ROLLBACK TRANSACTION-Anweisung für den OLAP-Server ausgeführt.</para>
          <para>Wenn Sie versuchen, diese Methode für einen PivotTable-Bericht basierend auf einer Nicht-OLAP-Datenquelle auszuführen, gibt die Methode einen Laufzeitfehler zurück.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayContextTooltips">
      <MemberSignature Language="C#" Value="public bool DisplayContextTooltips { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayContextTooltips" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.DisplayContextTooltips" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayContextTooltips As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayContextTooltips { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2551)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2551)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2551)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Steuert, ob QuickInfos für Zellen angezeigt <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> werden. Lese-/Schreibzugriff.</summary>
        <value><b>Boolescher Wert</b></value>
        <remarks><para>Wenn <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.DisplayContextTooltips" /> der Wert auf <b>"False"</b>festgelegt ist, werden kontextbezogene QuickInfos für <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> Zellen nicht angezeigt. Wenn sie auf <b>"True"</b>festgelegt ist, werden QuickInfos für <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> Zellen in den Zeilen-, Spalten- und Datenbereichen angezeigt.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayEmptyColumn">
      <MemberSignature Language="C#" Value="public bool DisplayEmptyColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayEmptyColumn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.DisplayEmptyColumn" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayEmptyColumn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayEmptyColumn { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2137)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2137)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2137)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt <b>True</b> zurück, wenn das nicht leere MDX-Schlüsselwort in der Abfrage des OLAP-Anbieters bezüglich der Größenachse enthalten ist. Der OLAP-Anbieter gibt keine leeren Spalten in der Ergebnismenge zurück. Gibt <b>False</b> zurück, wenn das nicht leere Schlüsselwort weggelassen wird. <b>Boolean</b>-Wert mit Lese-/Schreibzugriff.</summary>
        <value>To be added.</value>
        <remarks><para>Das PivotTable-Objekt muss mit einer OLAP-Datenquelle (Online Analytical Processing) verbunden sein, um einen Laufzeitfehler zu vermeiden.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayEmptyRow">
      <MemberSignature Language="C#" Value="public bool DisplayEmptyRow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayEmptyRow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.DisplayEmptyRow" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayEmptyRow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayEmptyRow { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2136)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2136)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2136)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt <b>True</b> zurück, wenn das nicht leere MDX-Schlüsselwort in der Abfrage des OLAP-Anbieters bezüglich der Kategorieachse enthalten ist. Der OLAP-Anbieter gibt keine leeren Zeilen in der Ergebnismenge zurück. Gibt <b>False</b> zurück, wenn das nicht leere Schlüsselwort weggelassen wird. <b>Boolean</b>-Wert mit Lese-/Schreibzugriff.</summary>
        <value>To be added.</value>
        <remarks><para>Das PivotTable-Objekt muss mit einer OLAP-Datenquelle (Online Analytical Processing) verbunden sein, um einen Laufzeitfehler zu vermeiden.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayErrorString">
      <MemberSignature Language="C#" Value="public bool DisplayErrorString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayErrorString" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.DisplayErrorString" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayErrorString As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayErrorString { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1485)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1485)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1485)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b></b> True , wenn im PivotTable-Bericht eine benutzerdefinierte Fehlerzeichenfolge in Zellen angezeigt wird, die Fehler enthalten. Der Standardwert ist <b>Falsch</b>. <b>Boolescher</b> Wert mit Lese-/Schreibzugriff.</summary>
        <value>To be added.</value>
        <remarks><para>Verwenden Sie die <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.ErrorString" /> Eigenschaft, um die benutzerdefinierte Fehlerzeichenfolge festzulegen.</para>
          <para>Diese Eigenschaft ist besonders nützlich, um die Division durch Null zu unterdrücken, wenn berechnete Felder pivotiert werden.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayFieldCaptions">
      <MemberSignature Language="C#" Value="public bool DisplayFieldCaptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayFieldCaptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.DisplayFieldCaptions" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayFieldCaptions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayFieldCaptions { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2555)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2555)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2555)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Steuert, ob Filterschaltflächen und <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> Beschriftungen für Zeilen und Spalten im Raster angezeigt werden. Lese-/Schreibzugriff.</summary>
        <value><b>Boolescher Wert</b></value>
        <remarks><para>Der Standardwert ist <b>True</b>.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayImmediateItems">
      <MemberSignature Language="C#" Value="public bool DisplayImmediateItems { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayImmediateItems" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.DisplayImmediateItems" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayImmediateItems As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayImmediateItems { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2126)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2126)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2126)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt einen <b>Boolean</b>Boolean-Wert zurück oder legt diesen fest, der anzeigt, ob Elemente in den Zeilen- oder Spaltenbereichen sichtbar sind, wenn der Datenbereich des PivotTable-Objektes leer ist. Wenn Sie für diese Eigenschaft den Wert <b>False</b>False festlegen, werden die Elemente in den Zeilen- und Spaltenbereichen ausgeblendet, wenn der Datenbereich des PivotTable-Objektes leer ist. Der Standardwert ist <b>True</b>True.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayMemberPropertyTooltips">
      <MemberSignature Language="C#" Value="public bool DisplayMemberPropertyTooltips { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayMemberPropertyTooltips" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.DisplayMemberPropertyTooltips" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayMemberPropertyTooltips As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayMemberPropertyTooltips { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2550)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2550)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2550)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Steuert, ob Elementeigenschaften in QuickInfos angezeigt werden. Lese-/Schreibzugriff.</summary>
        <value><b>Boolescher Wert</b></value>
        <remarks><para>Wenn <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.DisplayMemberPropertyTooltips" /> False festgelegt ist, werden keine Elementeigenschaften in QuickInfos angezeigt. <b></b> Ist die Eigenschaft auf <b>True</b> festgelegt, werden Elementeigenschaften in QuickInfos angezeigt.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayNullString">
      <MemberSignature Language="C#" Value="public bool DisplayNullString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayNullString" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.DisplayNullString" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayNullString As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisplayNullString { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1486)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1486)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1486)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b></b> True , wenn im PivotTable-Bericht eine benutzerdefinierte Zeichenfolge in Zellen angezeigt wird, die NULL-Werte enthalten. Der Standardwert ist <b>True</b>. <b>Boolean</b>-Wert mit Lese-/Schreibzugriff.</summary>
        <value>To be added.</value>
        <remarks><para>Verwenden Sie die <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.NullString" /> Eigenschaft, um die benutzerdefinierte NULL-Zeichenfolge festzulegen.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="DrillDown">
      <MemberSignature Language="C#" Value="public void DrillDown (Microsoft.Office.Interop.Excel.PivotItem PivotItem, object PivotLine);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DrillDown([in]class Microsoft.Office.Interop.Excel.PivotItem PivotItem, [in]object PivotLine) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.PivotTable.DrillDown(Microsoft.Office.Interop.Excel.PivotItem,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3068)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PivotItem" Type="Microsoft.Office.Interop.Excel.PivotItem" />
        <Parameter Name="PivotLine" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="PivotItem">Das Element, von dem aus der Drilldown ausgeführt wird.</param>
        <param name="PivotLine">Gibt die Zeile in der PivotTable an, in der sich das Startelement des Vorgangs befindet. In Fällen, in denen PivotLine nicht angegeben ist, wird standardmäßig die oberste PivotLine verwendet, in der das Element angezeigt wird.</param>
        <summary>Ermöglicht es Ihnen, einen Drilldown in die Daten in einer OLAP- oder PowerPivot basierenden Cubehierarchie auszuführen.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrillTo">
      <MemberSignature Language="C#" Value="public void DrillTo (Microsoft.Office.Interop.Excel.PivotItem PivotItem, Microsoft.Office.Interop.Excel.CubeField CubeField, object PivotLine);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DrillTo([in]class Microsoft.Office.Interop.Excel.PivotItem PivotItem, [in]class Microsoft.Office.Interop.Excel.CubeField CubeField, [in]object PivotLine) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.PivotTable.DrillTo(Microsoft.Office.Interop.Excel.PivotItem,Microsoft.Office.Interop.Excel.CubeField,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2580)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PivotItem" Type="Microsoft.Office.Interop.Excel.PivotItem" />
        <Parameter Name="CubeField" Type="Microsoft.Office.Interop.Excel.CubeField" />
        <Parameter Name="PivotLine" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="PivotItem">Das Element, von dem aus der Drilldownvorgang ausgeführt wird.</param>
        <param name="CubeField">Die Zielhierarchie, auf die ein Drilldown ausgeführt wird.</param>
        <param name="PivotLine">Gibt die Zeile in der PivotTable an, in der sich das Startelement des Vorgangs befindet. In Fällen, in denen PivotLine nicht angegeben ist, wird standardmäßig die oberste PivotLine verwendet, in der das Element angezeigt wird.</param>
        <summary>Ermöglicht das Ausführen eines Drillthroughs zu einer Position innerhalb einer OLAP- oder PowerPivot basierenden Cubehierarchie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrillUp">
      <MemberSignature Language="C#" Value="public void DrillUp (Microsoft.Office.Interop.Excel.PivotItem PivotItem, object PivotLine, object LevelUniqueName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DrillUp([in]class Microsoft.Office.Interop.Excel.PivotItem PivotItem, [in]object PivotLine, [in]object LevelUniqueName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.PivotTable.DrillUp(Microsoft.Office.Interop.Excel.PivotItem,System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3069)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PivotItem" Type="Microsoft.Office.Interop.Excel.PivotItem" />
        <Parameter Name="PivotLine" Type="System.Object" />
        <Parameter Name="LevelUniqueName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="PivotItem">Das Element, von dem aus der Drilldown ausgeführt wird.</param>
        <param name="PivotLine">Gibt die Zeile in der PivotTable an, in der sich das Startelement des Vorgangs befindet. In Fällen, in denen PivotLine nicht angegeben ist, wird standardmäßig die oberste PivotLine verwendet, in der das Element angezeigt wird.</param>
        <param name="LevelUniqueName">Das Ziel für einen Drilldown mit mehreren Ebenen. Die Standardaktion, wenn nicht angegeben, ist ein Drilldown auf einer Ebene.</param>
        <summary>Ermöglicht es Ihnen, einen Drilldown in die Daten in einer OLAP- oder PowerPivot basierenden Cubehierarchie auszuführen.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy15">
      <MemberSignature Language="C#" Value="public object Dummy15 (object Arg1, object Arg2, object Arg3, object Arg4, object Arg5, object Arg6, object Arg7, object Arg8, object Arg9, object Arg10, object Arg11, object Arg12, object Arg13, object Arg14, object Arg15, object Arg16, object Arg17, object Arg18, object Arg19, object Arg20, object Arg21, object Arg22, object Arg23, object Arg24, object Arg25, object Arg26, object Arg27, object Arg28, object Arg29, object Arg30);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy15([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4, [in]object Arg5, [in]object Arg6, [in]object Arg7, [in]object Arg8, [in]object Arg9, [in]object Arg10, [in]object Arg11, [in]object Arg12, [in]object Arg13, [in]object Arg14, [in]object Arg15, [in]object Arg16, [in]object Arg17, [in]object Arg18, [in]object Arg19, [in]object Arg20, [in]object Arg21, [in]object Arg22, [in]object Arg23, [in]object Arg24, [in]object Arg25, [in]object Arg26, [in]object Arg27, [in]object Arg28, [in]object Arg29, [in]object Arg30) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.PivotTable.Dummy15(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy15 (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object, Optional Arg5 As Object, Optional Arg6 As Object, Optional Arg7 As Object, Optional Arg8 As Object, Optional Arg9 As Object, Optional Arg10 As Object, Optional Arg11 As Object, Optional Arg12 As Object, Optional Arg13 As Object, Optional Arg14 As Object, Optional Arg15 As Object, Optional Arg16 As Object, Optional Arg17 As Object, Optional Arg18 As Object, Optional Arg19 As Object, Optional Arg20 As Object, Optional Arg21 As Object, Optional Arg22 As Object, Optional Arg23 As Object, Optional Arg24 As Object, Optional Arg25 As Object, Optional Arg26 As Object, Optional Arg27 As Object, Optional Arg28 As Object, Optional Arg29 As Object, Optional Arg30 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2127)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
        <Parameter Name="Arg5" Type="System.Object" />
        <Parameter Name="Arg6" Type="System.Object" />
        <Parameter Name="Arg7" Type="System.Object" />
        <Parameter Name="Arg8" Type="System.Object" />
        <Parameter Name="Arg9" Type="System.Object" />
        <Parameter Name="Arg10" Type="System.Object" />
        <Parameter Name="Arg11" Type="System.Object" />
        <Parameter Name="Arg12" Type="System.Object" />
        <Parameter Name="Arg13" Type="System.Object" />
        <Parameter Name="Arg14" Type="System.Object" />
        <Parameter Name="Arg15" Type="System.Object" />
        <Parameter Name="Arg16" Type="System.Object" />
        <Parameter Name="Arg17" Type="System.Object" />
        <Parameter Name="Arg18" Type="System.Object" />
        <Parameter Name="Arg19" Type="System.Object" />
        <Parameter Name="Arg20" Type="System.Object" />
        <Parameter Name="Arg21" Type="System.Object" />
        <Parameter Name="Arg22" Type="System.Object" />
        <Parameter Name="Arg23" Type="System.Object" />
        <Parameter Name="Arg24" Type="System.Object" />
        <Parameter Name="Arg25" Type="System.Object" />
        <Parameter Name="Arg26" Type="System.Object" />
        <Parameter Name="Arg27" Type="System.Object" />
        <Parameter Name="Arg28" Type="System.Object" />
        <Parameter Name="Arg29" Type="System.Object" />
        <Parameter Name="Arg30" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <param name="Arg5">To be added.</param>
        <param name="Arg6">To be added.</param>
        <param name="Arg7">To be added.</param>
        <param name="Arg8">To be added.</param>
        <param name="Arg9">To be added.</param>
        <param name="Arg10">To be added.</param>
        <param name="Arg11">To be added.</param>
        <param name="Arg12">To be added.</param>
        <param name="Arg13">To be added.</param>
        <param name="Arg14">To be added.</param>
        <param name="Arg15">To be added.</param>
        <param name="Arg16">To be added.</param>
        <param name="Arg17">To be added.</param>
        <param name="Arg18">To be added.</param>
        <param name="Arg19">To be added.</param>
        <param name="Arg20">To be added.</param>
        <param name="Arg21">To be added.</param>
        <param name="Arg22">To be added.</param>
        <param name="Arg23">To be added.</param>
        <param name="Arg24">To be added.</param>
        <param name="Arg25">To be added.</param>
        <param name="Arg26">To be added.</param>
        <param name="Arg27">To be added.</param>
        <param name="Arg28">To be added.</param>
        <param name="Arg29">To be added.</param>
        <param name="Arg30">To be added.</param>
        <summary>Für die interne Verwendung reserviert.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dummy2">
      <MemberSignature Language="C#" Value="public object Dummy2 (object Arg1, object Arg2, object Arg3, object Arg4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Dummy2([in]object Arg1, [in]object Arg2, [in]object Arg3, [in]object Arg4) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.PivotTable.Dummy2(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dummy2 (Arg1 As Object, Optional Arg2 As Object, Optional Arg3 As Object, Optional Arg4 As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1783)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Arg1" Type="System.Object" />
        <Parameter Name="Arg2" Type="System.Object" />
        <Parameter Name="Arg3" Type="System.Object" />
        <Parameter Name="Arg4" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Arg1">To be added.</param>
        <param name="Arg2">To be added.</param>
        <param name="Arg3">To be added.</param>
        <param name="Arg4">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableDataValueEditing">
      <MemberSignature Language="C#" Value="public bool EnableDataValueEditing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableDataValueEditing" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.EnableDataValueEditing" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableDataValueEditing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableDataValueEditing { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2121)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2121)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2121)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b>"True",</b> um die Warnung zu deaktivieren, wenn der Benutzer Werte im Datenbereich der PivotTable überschreibt. <b>Mit "True"</b> kann der Benutzer auch Datenwerte ändern, die zuvor nicht geändert werden konnten. Der Standardwert ist <b>Falsch</b>. <b>Boolescher</b> Wert mit Lese-/Schreibzugriff.</summary>
        <value>To be added.</value>
        <remarks><para>Sämtliche Bearbeitungsvorgänge, die für Datenwerte durchgeführt wurden, gehen nach dem Aktualisieren verloren.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableDrilldown">
      <MemberSignature Language="C#" Value="public bool EnableDrilldown { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableDrilldown" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.EnableDrilldown" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableDrilldown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableDrilldown { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1487)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1487)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1487)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b>True,</b> wenn Drilldown aktiviert ist. Der Standardwert ist <b>True</b>. <b>Boolean</b>-Wert mit Lese-/Schreibzugriff.</summary>
        <value>To be added.</value>
        <remarks><para>Wird diese Eigenschaft für einen PivotTable-Bericht festgelegt, so gilt sie für alle Felder dieses Berichts.</para>
          <para>Bei OLAP-Datenquellen ist der Wert immer <b>True</b>.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableFieldDialog">
      <MemberSignature Language="C#" Value="public bool EnableFieldDialog { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableFieldDialog" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.EnableFieldDialog" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableFieldDialog As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableFieldDialog { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1488)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1488)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1488)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b></b> True , wenn das Dialogfeld PivotTable-Feld verfügbar ist, wenn der Benutzer auf das PivotTable-Feld doppelklickt. <b></b> Der Standardwert ist <b>True</b>. <b>Boolean</b>-Wert mit Lese-/Schreibzugriff.</summary>
        <value>To be added.</value>
        <remarks><para>Wird diese Eigenschaft für einen PivotTable-Bericht festgelegt, so gilt sie für alle Felder dieses Berichts.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableFieldList">
      <MemberSignature Language="C#" Value="public bool EnableFieldList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableFieldList" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.EnableFieldList" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableFieldList As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableFieldList { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2128)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2128)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2128)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b>False,</b> um die Möglichkeit zum Anzeigen der Feldliste für die PivotTable zu deaktivieren. Wenn die Feldliste bereits angezeigt wurde, wird sie ausgeblendet. Der Standardwert ist <b>True</b>. <b>Boolean</b>-Wert mit Lese-/Schreibzugriff.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableWizard">
      <MemberSignature Language="C#" Value="public bool EnableWizard { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableWizard" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.EnableWizard" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableWizard As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableWizard { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1489)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1489)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1489)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b>True,</b> Wenn der PivotTable-Assistent verfügbar ist. Der Standardwert ist <b>True</b>. <b>Boolean</b>-Wert mit Lese-/Schreibzugriff.</summary>
        <value>To be added.</value>
        <remarks><para>Wenn diese Eigenschaft festgelegt wird, werden die Feldquellen im Arbeitsblatt nicht angezeigt.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableWriteback">
      <MemberSignature Language="C#" Value="public bool EnableWriteback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableWriteback" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.EnableWriteback" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableWriteback As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableWriteback { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2872)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2872)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2872)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt fest, ob das Zurückschreiben in die Datenquelle für die angegebene PivotTable aktiviert ist.</summary>
        <value><b>true,</b> wenn das Zurückschreiben in die Datenquelle für die angegebene PivotTable aktiviert ist; andernfalls <b>false</b>. Der Standardwert ist <b>false</b>.</value>
        <remarks><para>Lese-/Schreibzugriff.</para>
          <para>Bei OLAP-Datenquellen aktiviert die Einstellung auf <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.EnableWriteback" /> <b>"true"</b> das Zurückschreiben und deaktiviert die Warnung, wenn der Benutzer Werte im Datenbereich der PivotTable überschreibt. Bei Nicht-OLAP-Datenquellen ermöglicht das Festlegen der <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.EnableWriteback" /> Eigenschaft auf <b>"true"</b> das Zurückschreiben im Code und ermöglicht es dem Benutzer, Datenwerte zu ändern, die zuvor nicht geändert werden konnten.</para>
          <para>Die <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.EnableWriteback" /> <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.EnableDataValueEditing" /> Eigenschaften des Objekts können nicht gleichzeitig <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> auf <b>"true"</b> festgelegt werden.</para>
          <para>Wenn die <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.EnableDataValueEditing" /> Eigenschaft auf <b>"true"</b> und dann <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.EnableWriteback" /> auf <b>"true"</b>festgelegt ist, wird die <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.EnableDataValueEditing" /> Eigenschaft automatisch auf <b>"false"</b> festgelegt, die PivotTable wird aktualisiert, und die Bearbeitung von Datenwerten geht verloren.</para>
          <para>Wenn die <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.EnableWriteback" /> Eigenschaft auf <b>"true"</b> und dann <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.EnableDataValueEditing" /> auf <b>"true"</b>festgelegt ist, wird die <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.EnableWriteback" /> Eigenschaft automatisch auf <b>"false"</b> festgelegt, die PivotTable wird nicht aktualisiert, und die Datenquellenwerte werden wiederhergestellt.</para>
          <para>Wird diese Eigenschaft bei Nicht-OLAP-Datenquellen festgelegt, wird ein Laufzeitfehler ausgegeben.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorString">
      <MemberSignature Language="C#" Value="public string ErrorString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ErrorString" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.ErrorString" />
      <MemberSignature Language="VB.NET" Value="Public Property ErrorString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ErrorString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1490)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1490)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1490)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt die Zeichenfolge zurück, die in Zellen angezeigt wird, die Fehler enthalten, wenn die Eigenschaft true ist, oder legt sie <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.DisplayErrorString" /> fest. <b></b> Der Standardwert ist eine leere Zeichenfolge (""). <b>Zeichenfolge</b> mit Lese-/Schreibzugriff.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldListSortAscending">
      <MemberSignature Language="C#" Value="public bool FieldListSortAscending { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FieldListSortAscending" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.FieldListSortAscending" />
      <MemberSignature Language="VB.NET" Value="Public Property FieldListSortAscending As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FieldListSortAscending { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2573)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2573)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2573)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Steuert die Sortierreihenfolge von Feldern in der <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> Feldliste. Lese-/Schreibzugriff.</summary>
        <value><b>Boolescher Wert</b></value>
        <remarks><para>Wenn diese Eigenschaft auf <b>True</b> festgelegt ist, werden die Felder aufsteigend sortiert. Wenn sie auf <b>False</b> festgelegt ist, werden die Felder in der Reihenfolge der Datenquellen sortiert. </para>
          <para>Gilt nicht für <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> olap-Datenquellen verbunden.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public void Format (Microsoft.Office.Interop.Excel.XlPivotFormatType Format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Format([in]valuetype Microsoft.Office.Interop.Excel.XlPivotFormatType Format) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.PivotTable.Format(Microsoft.Office.Interop.Excel.XlPivotFormatType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Format (Format As XlPivotFormatType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Format(Microsoft::Office::Interop::Excel::XlPivotFormatType Format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(116)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Format" Type="Microsoft.Office.Interop.Excel.XlPivotFormatType" />
      </Parameters>
      <Docs>
        <param name="Format"><see cref="T:Microsoft.Office.Interop.Excel.XlPivotFormatType" />Erforderlich. Gibt den Typ der Berichtsformatierung an, die für den angegebenen PivotTable-Bericht angewendet werden soll.</param>
        <summary>Legt einen PivotTable-Bericht auf eines der vordefinierten eingezogenen, nicht benutzerdefinierten oder quer tabellarischen Formate fest.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public double GetData (string Name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 GetData([in]string Name) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.PivotTable.GetData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetData (Name As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double GetData(System::String ^ Name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1491)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Name"><b>String</b> erforderlich. Beschreibt eine einzelne Zelle im PivotTable-Bericht unter Verwendung einer Syntax ähnlich der <see cref="M:Microsoft.Office.Interop.Excel.PivotTable.PivotSelect(System.String,Microsoft.Office.Interop.Excel.XlPTSelectionMode,System.Object)" /> Methode oder der PivotTable-Berichtsverweise in berechneten Elementformeln.</param>
        <summary>Gibt Daten aus der angegebenen PivotTable-Zelle zurück.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPivotData">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range GetPivotData (object DataField, object Field1, object Item1, object Field2, object Item2, object Field3, object Item3, object Field4, object Item4, object Field5, object Item5, object Field6, object Item6, object Field7, object Item7, object Field8, object Item8, object Field9, object Item9, object Field10, object Item10, object Field11, object Item11, object Field12, object Item12, object Field13, object Item13, object Field14, object Item14);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.Range GetPivotData([in]object DataField, [in]object Field1, [in]object Item1, [in]object Field2, [in]object Item2, [in]object Field3, [in]object Item3, [in]object Field4, [in]object Item4, [in]object Field5, [in]object Item5, [in]object Field6, [in]object Item6, [in]object Field7, [in]object Item7, [in]object Field8, [in]object Item8, [in]object Field9, [in]object Item9, [in]object Field10, [in]object Item10, [in]object Field11, [in]object Item11, [in]object Field12, [in]object Item12, [in]object Field13, [in]object Item13, [in]object Field14, [in]object Item14) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.PivotTable.GetPivotData(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPivotData (Optional DataField As Object, Optional Field1 As Object, Optional Item1 As Object, Optional Field2 As Object, Optional Item2 As Object, Optional Field3 As Object, Optional Item3 As Object, Optional Field4 As Object, Optional Item4 As Object, Optional Field5 As Object, Optional Item5 As Object, Optional Field6 As Object, Optional Item6 As Object, Optional Field7 As Object, Optional Item7 As Object, Optional Field8 As Object, Optional Item8 As Object, Optional Field9 As Object, Optional Item9 As Object, Optional Field10 As Object, Optional Item10 As Object, Optional Field11 As Object, Optional Item11 As Object, Optional Field12 As Object, Optional Item12 As Object, Optional Field13 As Object, Optional Item13 As Object, Optional Field14 As Object, Optional Item14 As Object) As Range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2090)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="DataField" Type="System.Object" />
        <Parameter Name="Field1" Type="System.Object" />
        <Parameter Name="Item1" Type="System.Object" />
        <Parameter Name="Field2" Type="System.Object" />
        <Parameter Name="Item2" Type="System.Object" />
        <Parameter Name="Field3" Type="System.Object" />
        <Parameter Name="Item3" Type="System.Object" />
        <Parameter Name="Field4" Type="System.Object" />
        <Parameter Name="Item4" Type="System.Object" />
        <Parameter Name="Field5" Type="System.Object" />
        <Parameter Name="Item5" Type="System.Object" />
        <Parameter Name="Field6" Type="System.Object" />
        <Parameter Name="Item6" Type="System.Object" />
        <Parameter Name="Field7" Type="System.Object" />
        <Parameter Name="Item7" Type="System.Object" />
        <Parameter Name="Field8" Type="System.Object" />
        <Parameter Name="Item8" Type="System.Object" />
        <Parameter Name="Field9" Type="System.Object" />
        <Parameter Name="Item9" Type="System.Object" />
        <Parameter Name="Field10" Type="System.Object" />
        <Parameter Name="Item10" Type="System.Object" />
        <Parameter Name="Field11" Type="System.Object" />
        <Parameter Name="Item11" Type="System.Object" />
        <Parameter Name="Field12" Type="System.Object" />
        <Parameter Name="Item12" Type="System.Object" />
        <Parameter Name="Field13" Type="System.Object" />
        <Parameter Name="Item13" Type="System.Object" />
        <Parameter Name="Field14" Type="System.Object" />
        <Parameter Name="Item14" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="DataField"><b>Optional-Objekt</b>. Der Name des Felds, das die Daten für die PivotTable enthält.</param>
        <param name="Field1"><b>Optional-Objekt</b>. Der Name eines Spalten- oder Zeilenfelds im PivotTable-Bericht.</param>
        <param name="Item1"><b>Optional-Objekt</b>. Der Name eines Elements in <paramref name="Field1" /> .</param>
        <param name="Field2"><b>Optional-Objekt</b>. Der Name eines Spalten- oder Zeilenfelds im PivotTable-Bericht.</param>
        <param name="Item2"><b>Optional-Objekt</b>. Der Name eines Elements in <paramref name="Field2" /> .</param>
        <param name="Field3"><b>Optional-Objekt</b>. Der Name eines Spalten- oder Zeilenfelds im PivotTable-Bericht.</param>
        <param name="Item3"><b>Optional-Objekt</b>. Der Name eines Elements in <paramref name="Field3" /> .</param>
        <param name="Field4"><b>Optional-Objekt</b>. Der Name eines Spalten- oder Zeilenfelds im PivotTable-Bericht.</param>
        <param name="Item4"><b>Optional-Objekt</b>. Der Name eines Elements in <paramref name="Field4" /> .</param>
        <param name="Field5"><b>Optional-Objekt</b>. Der Name eines Spalten- oder Zeilenfelds im PivotTable-Bericht.</param>
        <param name="Item5"><b>Optional-Objekt</b>. Der Name eines Elements in <paramref name="Field5" /> .</param>
        <param name="Field6"><b>Optional-Objekt</b>. Der Name eines Spalten- oder Zeilenfelds im PivotTable-Bericht.</param>
        <param name="Item6"><b>Optional-Objekt</b>. Der Name eines Elements in <paramref name="Field6" /> .</param>
        <param name="Field7"><b>Optional-Objekt</b>. Der Name eines Spalten- oder Zeilenfelds im PivotTable-Bericht.</param>
        <param name="Item7"><b>Optional-Objekt</b>. Der Name eines Elements in <paramref name="Field7" /> .</param>
        <param name="Field8"><b>Optional-Objekt</b>. Der Name eines Spalten- oder Zeilenfelds im PivotTable-Bericht.</param>
        <param name="Item8"><b>Optional-Objekt</b>. Der Name eines Elements in <paramref name="Field8" /> .</param>
        <param name="Field9"><b>Optional-Objekt</b>. Der Name eines Spalten- oder Zeilenfelds im PivotTable-Bericht.</param>
        <param name="Item9"><b>Optional-Objekt</b>. Der Name eines Elements in <paramref name="Field9" /> .</param>
        <param name="Field10"><b>Optional-Objekt</b>. Der Name eines Spalten- oder Zeilenfelds im PivotTable-Bericht.</param>
        <param name="Item10"><b>Optional-Objekt</b>. Der Name eines Elements in <paramref name="Field10" /> .</param>
        <param name="Field11"><b>Optional-Objekt</b>. Der Name eines Spalten- oder Zeilenfelds im PivotTable-Bericht.</param>
        <param name="Item11"><b>Optional-Objekt</b>. Der Name eines Elements in <paramref name="Field11" /> .</param>
        <param name="Field12"><b>Optional-Objekt</b>. Der Name eines Spalten- oder Zeilenfelds im PivotTable-Bericht.</param>
        <param name="Item12"><b>Optional-Objekt</b>. Der Name eines Elements in <paramref name="Field12" /> .</param>
        <param name="Field13"><b>Optional-Objekt</b>. Der Name eines Spalten- oder Zeilenfelds im PivotTable-Bericht.</param>
        <param name="Item13"><b>Optional-Objekt</b>. Der Name eines Elements in <paramref name="Field13" /> .</param>
        <param name="Field14"><b>Optional-Objekt</b>. Der Name eines Spalten- oder Zeilenfelds im PivotTable-Bericht.</param>
        <param name="Item14"><b>Optional-Objekt</b>. Der Name eines Elements in <paramref name="Field14" /> .</param>
        <summary>Gibt ein <b>Range -Objekt</b> mit Informationen zu einem Datenelement in einem PivotTable-Bericht zurück.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GrandTotalName">
      <MemberSignature Language="C#" Value="public string GrandTotalName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string GrandTotalName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.GrandTotalName" />
      <MemberSignature Language="VB.NET" Value="Public Property GrandTotalName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ GrandTotalName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1840)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1840)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1840)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt die Beschriftung, die im Spaltengesamtergebnis oder in der Zeilenüberschrift im angegebenen PivotTable-Bericht angezeigt wird, als Textzeichenfolge zurück oder legt sie fest. Der Standardwert ist die Zeichenfolge "Gesamtsumme". <b>String</b>-Wert mit Lese-/Schreibzugriff.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAutoFormat">
      <MemberSignature Language="C#" Value="public bool HasAutoFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAutoFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.HasAutoFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property HasAutoFormat As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasAutoFormat { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(695)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(695)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(695)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b>True,</b> Wenn der PivotTable-Bericht automatisch formatiert wird, wenn er aktualisiert wird oder wenn Felder verschoben werden. <b>Boolescher</b> Wert mit Lese-/Schreibzugriff.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Hidden">
      <MemberSignature Language="C#" Value="public bool Hidden { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Hidden" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.Hidden" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hidden As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Hidden { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(268)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(268)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Überprüft, ob die PivotTable auf Arbeitsblattebene vorhanden ist. <b>Boolean</b> (<b>bool</b> in C#). Schreibgeschützt</summary>
        <value>To be added.</value>
        <remarks><para>Wenn die <b>Hidden-Eigenschaft</b> auf <b>True</b>festgelegt ist, wird das <b>PivotTable-Objekt</b> auf Arbeitsblattebene ausgeblendet. Wenn die Eigenschaft auf <b>"False"</b>festgelegt ist, ist die PivotTable in einem Arbeitsblatt vorhanden.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="HiddenFields">
      <MemberSignature Language="C#" Value="public object HiddenFields[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object HiddenFields(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.HiddenFields(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HiddenFields(Optional Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ HiddenFields[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(711)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(711)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><b>Optional-Objekt</b>. Der Name oder die Nummer des zurückzugebenden Felds (dies kann eine Matrix sein, um mehrere Felder anzugeben).</param>
        <summary>Gibt ein Objekt zurück, das ein einzelnes PivotTable-Feld (ein <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> Objekt) oder eine Auflistung aller Felder (ein <see cref="T:Microsoft.Office.Interop.Excel.PivotFields" /> Objekt) darstellt, die derzeit nicht als Zeilen-, Spalten-, Seiten- oder Datenfelder angezeigt werden. Schreibgeschützt.</summary>
        <value>To be added.</value>
        <remarks><para>Bei OLAP-Datenquellen gibt diese Eigenschaft immer eine leere Auflistung zurück.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="InGridDropZones">
      <MemberSignature Language="C#" Value="public bool InGridDropZones { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InGridDropZones" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.InGridDropZones" />
      <MemberSignature Language="VB.NET" Value="Public Property InGridDropZones As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InGridDropZones { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2560)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2560)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2560)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Diese Eigenschaft wird verwendet, um In-Grid-Dropzonen für ein <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> Objekt umzuschalten.  In einigen Fällen wirkt sich dies auch auf das Layout der <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> . Lese-/Schreibzugriff.</summary>
        <value><b>Boolescher Wert</b></value>
        <remarks><para>Wenn die <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.InGridDropZones" /> Eigenschaft auf <b> True </b>festgelegt ist, entspricht die In-Grid-Darstellung der Eigenschaft der Darstellung in Excel <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> 2003. Wird die Eigenschaft auf <b>False</b> festgelegt, gibt es diese Zonen nicht. Das <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> Layout ändert sich auch mit dieser Eigenschaft.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="InnerDetail">
      <MemberSignature Language="C#" Value="public string InnerDetail { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerDetail" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.InnerDetail" />
      <MemberSignature Language="VB.NET" Value="Public Property InnerDetail As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InnerDetail { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(698)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(698)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(698)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt den Namen des Felds zurück, das als Detail angezeigt wird, wenn die <see cref="P:Microsoft.Office.Interop.Excel.PivotItem.ShowDetail" /> Eigenschaft für das innerste Zeilen- oder Spaltenfeld <b>true</b> ist, oder legt diesen Fest. <b>Zeichenfolge</b> mit Lese-/Schreibzugriff.</summary>
        <value>To be added.</value>
        <remarks><para>Diese Eigenschaft ist für OLAP-Datenquellen nicht verfügbar.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="LayoutRowDefault">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlLayoutRowType LayoutRowDefault { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlLayoutRowType LayoutRowDefault" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.LayoutRowDefault" />
      <MemberSignature Language="VB.NET" Value="Public Property LayoutRowDefault As XlLayoutRowType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlLayoutRowType LayoutRowDefault { Microsoft::Office::Interop::Excel::XlLayoutRowType get(); void set(Microsoft::Office::Interop::Excel::XlLayoutRowType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2554)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2554)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2554)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlLayoutRowType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Diese Eigenschaft gibt die Layouteinstellungen <see cref="T:Microsoft.Office.Interop.Excel.PivotFields" /> an, wenn sie zum ersten Mal hinzugefügt <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> werden. Lese-/Schreibzugriff.</summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.XlLayoutRowType" /></value>
        <remarks><para>
            <see cref="T:Microsoft.Office.Interop.Excel.XlLayoutRowType" /> can be either xlCompactRow, xlTabularRow, or xlOutlineRow.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ListFormulas">
      <MemberSignature Language="C#" Value="public void ListFormulas ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ListFormulas() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.PivotTable.ListFormulas" />
      <MemberSignature Language="VB.NET" Value="Public Sub ListFormulas ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ListFormulas();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1492)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt in einem separaten Arbeitsblatt eine Liste berechneter PivotTable-Elemente und -Felder.</summary>
        <remarks><para>Diese Methode steht für OLAP-Datenquellen nicht zur Verfügung.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public string Location { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Location" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.Location" />
      <MemberSignature Language="VB.NET" Value="Public Property Location As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Location { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1397)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1397)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1397)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Dient zum Abrufen oder Festlegen einer <b>Zeichenfolge</b> , die die obere linke Zelle im Textkörper der angegebenen <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> darstellt. Lese-/Schreibzugriff.</summary>
        <value><b>String</b></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManualUpdate">
      <MemberSignature Language="C#" Value="public bool ManualUpdate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ManualUpdate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.ManualUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Property ManualUpdate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ManualUpdate { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1493)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1493)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1493)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b>True</b>, wenn der PivotTable-Bericht lediglich auf Anfrage des Benutzers neu berechnet wird. Der Standardwert ist <b>False</b>. <b>Boolean</b>-Wert mit Lese-/Schreibzugriff.</summary>
        <value>To be added.</value>
        <remarks><para>Diese Eigenschaft wird unmittelbar nach dem Beenden des Programms auf <b>"False"</b> festgelegt.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MDX">
      <MemberSignature Language="C#" Value="public string MDX { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MDX" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.MDX" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MDX As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MDX { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2123)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2123)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt eine <b>Zeichenfolge</b> zurück, der die MDX (Multidimensional Expression) angibt, die an den Anbieter gesendet werden würde, um die aktuelle PivotTable-Ansicht aufzufüllen. Schreibgeschützt.</summary>
        <value>To be added.</value>
        <remarks><para>Wenn Sie diesen Wert für eine NICHT-OLAP-PivotTable (Online Analytical Processing) abfragen oder wenn keine PivotTable-Ansicht (keine Datenelemente) vorhanden ist, wird ein Laufzeitfehler zurückgegeben.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeLabels">
      <MemberSignature Language="C#" Value="public bool MergeLabels { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MergeLabels" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.MergeLabels" />
      <MemberSignature Language="VB.NET" Value="Public Property MergeLabels As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MergeLabels { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1494)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1494)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1494)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b>True</b>, wenn für die Beschriftungen von Elementen der äußeren Zeile des angegebenen PivotTable-Berichts, von Spaltenelementen, von Teilergebnissen und Gesamtsummen verbundene Zellen verwendet werden. <b>Boolean</b>-Wert mit Lese-/Schreibzugriff.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(110)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt den Namen des Objekts zurück oder legt ihn fest. <b>String</b> -Wert mit Lese-/Schreibzugriff.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NullString">
      <MemberSignature Language="C#" Value="public string NullString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NullString" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.NullString" />
      <MemberSignature Language="VB.NET" Value="Public Property NullString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NullString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1495)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1495)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1495)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt die Zeichenfolge zurück, die in Zellen angezeigt wird, die NULL-Werte enthalten, wenn die Eigenschaft true ist, oder legt sie <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.DisplayNullString" /> fest. <b></b> Der Standardwert ist eine leere Zeichenfolge (""). <b>Zeichenfolge</b> mit Lese-/Schreibzugriff.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PageFieldOrder">
      <MemberSignature Language="C#" Value="public int PageFieldOrder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageFieldOrder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.PageFieldOrder" />
      <MemberSignature Language="VB.NET" Value="Public Property PageFieldOrder As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PageFieldOrder { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1429)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1429)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1429)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt die Reihenfolge zurück, in der Seitenfelder dem Layout des PivotTable-Berichts hinzugefügt werden, oder legt sie fest. Dies kann eine der folgenden <see cref="T:Microsoft.Office.Interop.Excel.XlOrder" /> Konstanten sein: <b>xlDownThenOver</b> oder <b>xlOverThenDown</b>. Die Standardkonstante ist ein <b>xlDownThenOver</b>. <b>Ganze Zahl</b> mit Lese-/Schreibzugriff.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PageFields">
      <MemberSignature Language="C#" Value="public object PageFields[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object PageFields(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.PageFields(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PageFields(Optional Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ PageFields[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(714)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(714)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><b>Optional-Objekt</b>. Der Name oder die Nummer des zurückzugebenden Felds (dies kann eine Matrix sein, um mehrere Felder anzugeben).</param>
        <summary>Gibt ein Objekt zurück, das ein einzelnes PivotTable-Feld (ein <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> Objekt) oder eine Auflistung aller Felder (ein <see cref="T:Microsoft.Office.Interop.Excel.PivotFields" /> Objekt) darstellt, die derzeit als Seitenfelder angezeigt werden. Schreibgeschützt.</summary>
        <value>To be added.</value>
        <remarks><para>Eine Hierarchie kann nur ein Seitenfeld enthalten.</para>
          <para>Bei einem PivotTable-Bericht, der auf einem PivotTable-Cache basiert, gibt die zurückgegebene Auflistung der PivotTable-Felder den aktuellen Inhalt im Cache wieder.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PageFieldStyle">
      <MemberSignature Language="C#" Value="public string PageFieldStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PageFieldStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.PageFieldStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property PageFieldStyle As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PageFieldStyle { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1499)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1499)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1499)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt die im eingebundenen Seitenfeldbereich verwendete Formatvorlage zurück oder legt sie fest. Der Standardwert ist eine leere Zeichenfolge (standardmäßig wird keine Formatvorlage zugewiesen). <b>String</b>-Wert mit Lese-/Schreibzugriff.</summary>
        <value>To be added.</value>
        <remarks><para>Diese Formatvorlage wird als Standardformatvorlage für den Hintergrundbereich verwendet und zugewiesen, bevor eine Formatierung durch den Benutzer vorgenommen wird. Zellen, die frei werden, wenn ein Feld von einem Seitenfeldbereich auf eine andere Position pivotiert wird, behalten diese Formatvorlage bei.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PageFieldWrapCount">
      <MemberSignature Language="C#" Value="public int PageFieldWrapCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageFieldWrapCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.PageFieldWrapCount" />
      <MemberSignature Language="VB.NET" Value="Public Property PageFieldWrapCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PageFieldWrapCount { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1430)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1430)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1430)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt die Anzahl der Seitenfelder in jeder Spalte oder Zeile im PivotTable-Bericht zurück oder legt sie fest. <b>Ganze Zahl</b> mit Lese-/Schreibzugriff.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PageRange">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range PageRange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range PageRange" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.PageRange" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PageRange As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ PageRange { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(703)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(703)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt zurück, das den Bereich darstellt, der den Seitenbereich im PivotTable-Bericht enthält. Schreibgeschützt.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PageRangeCells">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range PageRangeCells { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range PageRangeCells" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.PageRangeCells" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PageRangeCells As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ PageRangeCells { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1482)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1482)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt zurück, das nur die Zellen im angegebenen PivotTable-Bericht darstellt, die die Seitenfelder und Element-Dropdownlisten enthalten.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt das übergeordnete Objekt für das angegebene Objekt zurück. Schreibgeschützt.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotCache">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotCache PivotCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.PivotCache PivotCache() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.PivotTable.PivotCache" />
      <MemberSignature Language="VB.NET" Value="Public Function PivotCache () As PivotCache" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::PivotCache ^ PivotCache();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1496)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotCache</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.PivotCache" /> Objekt zurück, das den Cache für den angegebenen PivotTable-Bericht darstellt. Schreibgeschützt.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotChart">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape PivotChart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Shape PivotChart" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.PivotChart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PivotChart As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Shape ^ PivotChart { Microsoft::Office::Interop::Excel::Shape ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3067)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3067)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> Objekt zurück, das die eigenständige PivotChart für den angegebenen ausgeblendeten PivotTable-Bericht darstellt. Schreibgeschützt.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotColumnAxis">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotAxis PivotColumnAxis { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PivotAxis PivotColumnAxis" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.PivotColumnAxis" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PivotColumnAxis As PivotAxis" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PivotAxis ^ PivotColumnAxis { Microsoft::Office::Interop::Excel::PivotAxis ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2546)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2546)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotAxis</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.PivotAxis" /> Objekt zurück, das die gesamte Spaltenachse darstellt. Schreibgeschützt.</summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.PivotAxis" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotFields">
      <MemberSignature Language="C#" Value="public object PivotFields (object Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object PivotFields([in]object Index) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.PivotTable.PivotFields(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PivotFields (Optional Index As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(718)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><b>Optional-Objekt</b>. Der Name oder die Nummer des zurückzugebenden Felds.</param>
        <summary>Gibt ein Objekt zurück, das ein einzelnes PivotTable-Feld (ein <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> Objekt) oder eine Auflistung der sichtbaren und ausgeblendeten Felder (ein <see cref="T:Microsoft.Office.Interop.Excel.PivotFields" /> Objekt) im PivotTable-Bericht darstellt. Schreibgeschützt.</summary>
        <returns>To be added.</returns>
        <remarks><para>Für OLAP-Datenquellen gibt es keine ausgeblendeten Felder, und das zurückgegebene Objekt oder die zurückgegebene Auflistung gibt an, was derzeit sichtbar ist.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotFormulas">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotFormulas PivotFormulas { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PivotFormulas PivotFormulas" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.PivotFormulas" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PivotFormulas As PivotFormulas" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PivotFormulas ^ PivotFormulas { Microsoft::Office::Interop::Excel::PivotFormulas ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1497)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1497)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotFormulas</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.PivotFormulas" /> Objekt zurück, das die Auflistung von Formeln für den angegebenen <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> Bericht darstellt. Schreibgeschützt.</summary>
        <value>To be added.</value>
        <remarks><para>Bei OLAP-Datenquellen gibt diese Eigenschaft eine leere Auflistung zurück.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotRowAxis">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotAxis PivotRowAxis { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.PivotAxis PivotRowAxis" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.PivotRowAxis" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PivotRowAxis As PivotAxis" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::PivotAxis ^ PivotRowAxis { Microsoft::Office::Interop::Excel::PivotAxis ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2547)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2547)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotAxis</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.PivotAxis" /> Objekt zurück, das die gesamte Zeilenachse darstellt. Schreibgeschützt.</summary>
        <value><see cref="T:Microsoft.Office.Interop.Excel.PivotAxis" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotSelect">
      <MemberSignature Language="C#" Value="public void PivotSelect (string Name, Microsoft.Office.Interop.Excel.XlPTSelectionMode Mode = Microsoft.Office.Interop.Excel.XlPTSelectionMode.xlDataAndLabel, object UseStandardName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PivotSelect([in]string Name, [in]valuetype Microsoft.Office.Interop.Excel.XlPTSelectionMode Mode, [in]object UseStandardName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.PivotTable.PivotSelect(System.String,Microsoft.Office.Interop.Excel.XlPTSelectionMode,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PivotSelect (Name As String, Optional Mode As XlPTSelectionMode = Microsoft.Office.Interop.Excel.XlPTSelectionMode.xlDataAndLabel, Optional UseStandardName As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1501)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Name" Type="System.String" />
        <Parameter Name="Mode" Type="Microsoft.Office.Interop.Excel.XlPTSelectionMode" />
        <Parameter Name="UseStandardName" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Name"><b>String</b> erforderlich. Die Auswahl im standardmäßigen PivotTable-Berichtsauswahlformat.</param>
        <param name="Mode">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlPTSelectionMode" /> . Gibt den strukturierten Auswahlmodus an.</param>
        <param name="UseStandardName"><b>Optional-Objekt</b>. Für aufgezeichnete Makros, die unter anderen Ländereinstellungen wiedergegeben werden können, wird der Wert  <b>True</b> zurückgegeben.</param>
        <summary>Markiert einen Teil eines PivotTable-Berichts.</summary>
        <remarks><para>Sie können den angegebenen Modus lediglich dazu verwenden, um das entsprechende Element in dem PivotTable-Bericht auszuwählen. Sie können beispielsweise mit dem <b>xlButton</b>-Modus keine Daten oder Beschriftungen auswählen; gleichermaßen können Sie mit dem <b>xlDataOnly</b>-Modus keine Schaltflächen auswählen.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotSelection">
      <MemberSignature Language="C#" Value="public string PivotSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PivotSelection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.PivotSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property PivotSelection As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PivotSelection { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1502)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1502)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1502)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt die PivotTable-Markierung im Standardmarkierungsformat des PivotTable-Berichts zurück oder legt sie fest. <b>String</b>-Wert mit Lese-/Schreibzugriff.</summary>
        <value>To be added.</value>
        <remarks><para>Das Festlegen dieser Eigenschaft entspricht dem Aufrufen der <see cref="M:Microsoft.Office.Interop.Excel.PivotTable.PivotSelect(System.String,Microsoft.Office.Interop.Excel.XlPTSelectionMode,System.Object)" /> Methode, bei der das <paramref name="Mode" /> Argument auf <b>xlDataAndLabel</b>festgelegt ist.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotSelectionStandard">
      <MemberSignature Language="C#" Value="public string PivotSelectionStandard { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PivotSelectionStandard" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.PivotSelectionStandard" />
      <MemberSignature Language="VB.NET" Value="Public Property PivotSelectionStandard As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PivotSelectionStandard { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2089)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2089)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2089)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt einen <b>String</b>-Wert zurück oder legt diesen fest, der die PivotTable-Auswahl im Standard-PivotTable-Berichtsformat anzeigt und Einstellungen für Englisch (USA) verwendet. Lese-/Schreibzugriff.</summary>
        <value>To be added.</value>
        <remarks><para>Die <b>PivotSelectionStandard-Eigenschaft</b> ist "international geeignet", die <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.PivotSelection" /> Eigenschaft dagegen nicht.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotTableWizard">
      <MemberSignature Language="C#" Value="public void PivotTableWizard (object SourceType, object SourceData, object TableDestination, object TableName, object RowGrand, object ColumnGrand, object SaveData, object HasAutoFormat, object AutoPage, object Reserved, object BackgroundQuery, object OptimizeCache, object PageFieldOrder, object PageFieldWrapCount, object ReadData, object Connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PivotTableWizard([in]object SourceType, [in]object SourceData, [in]object TableDestination, [in]object TableName, [in]object RowGrand, [in]object ColumnGrand, [in]object SaveData, [in]object HasAutoFormat, [in]object AutoPage, [in]object Reserved, [in]object BackgroundQuery, [in]object OptimizeCache, [in]object PageFieldOrder, [in]object PageFieldWrapCount, [in]object ReadData, [in]object Connection) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.PivotTable.PivotTableWizard(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PivotTableWizard (Optional SourceType As Object, Optional SourceData As Object, Optional TableDestination As Object, Optional TableName As Object, Optional RowGrand As Object, Optional ColumnGrand As Object, Optional SaveData As Object, Optional HasAutoFormat As Object, Optional AutoPage As Object, Optional Reserved As Object, Optional BackgroundQuery As Object, Optional OptimizeCache As Object, Optional PageFieldOrder As Object, Optional PageFieldWrapCount As Object, Optional ReadData As Object, Optional Connection As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(684)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="SourceType" Type="System.Object" />
        <Parameter Name="SourceData" Type="System.Object" />
        <Parameter Name="TableDestination" Type="System.Object" />
        <Parameter Name="TableName" Type="System.Object" />
        <Parameter Name="RowGrand" Type="System.Object" />
        <Parameter Name="ColumnGrand" Type="System.Object" />
        <Parameter Name="SaveData" Type="System.Object" />
        <Parameter Name="HasAutoFormat" Type="System.Object" />
        <Parameter Name="AutoPage" Type="System.Object" />
        <Parameter Name="Reserved" Type="System.Object" />
        <Parameter Name="BackgroundQuery" Type="System.Object" />
        <Parameter Name="OptimizeCache" Type="System.Object" />
        <Parameter Name="PageFieldOrder" Type="System.Object" />
        <Parameter Name="PageFieldWrapCount" Type="System.Object" />
        <Parameter Name="ReadData" Type="System.Object" />
        <Parameter Name="Connection" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="SourceType">Optional <see cref="T:Microsoft.Office.Interop.Excel.XlPivotTableSourceType" /> . Die Quelle der Berichtsdaten.</param>
        <param name="SourceData"><b>Optional-Objekt</b>. Die Daten für den neuen Bericht. Dabei kann es sich um ein <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt, ein Array von Bereichen oder eine Textkonstante handeln, die den Namen eines anderen Berichts darstellt. Bei einer externen Datenbank handelt es sich <paramref name="SourceData" /> um ein Array von Zeichenfolgen, die die SQL Abfragezeichenfolge enthalten, wobei jedes Element bis zu 255 Zeichen lang ist. Verwenden Sie das <paramref name="Connection" /> Argument, um die ODBC-Verbindungszeichenfolge anzugeben. Aus Gründen der Kompatibilität mit früheren Versionen von Excel kann es sich um ein Array mit <paramref name="SourceData" /> zwei Elementen sein. Das erste Element ist die Verbindungszeichenfolge zur Angabe der ODBC-Quelle der Daten. Das zweite Element ist die SQL-Abfragezeichenfolge, die zum Abrufen der Daten verwendet wird. Wenn Sie <paramref name="SourceData" /> angeben, müssen Sie auch <paramref name="SourceType" /> angeben. Wenn sich die aktive Zelle innerhalb des Bereichs befindet, müssen Sie dies <paramref name="SourceData" /> <paramref name="TableDestination" /> auch angeben.</param>
        <param name="TableDestination"><b>Optional-Objekt</b>. Ein <b>Range</b>-Objekt, das die Position angibt, an der der Bericht auf dem Arbeitsblatt platziert werden soll. Wenn Sie dieses Argument nicht angeben, wird der Bericht an der Stelle der aktiven Zelle platziert.</param>
        <param name="TableName"><b>Optional-Objekt</b>. Eine Zeichenfolge, die den Namen des neuen Berichts angibt.</param>
        <param name="RowGrand"><b>Optional-Objekt</b>. <b>True</b>, wenn der Bericht Gesamtergebnisse für Zeilen enthalten soll.</param>
        <param name="ColumnGrand"><b>Optional-Objekt</b>. <b>True</b>, wenn der Bericht Gesamtergebnisse für Spalten enthalten soll.</param>
        <param name="SaveData"><b>Optional-Objekt</b>. <b>True</b>, wenn die Daten zusammen mit dem Bericht gespeichert werden sollen. <b>False</b>, wenn nur die Definition des Berichts gespeichert werden soll.</param>
        <param name="HasAutoFormat"><b>Optional-Objekt</b>. <b>True</b>, wenn der Bericht nach einer Aktualisierung oder nach dem Verschieben von Feldern in Microsoft Excel automatisch formatiert werden soll.</param>
        <param name="AutoPage"><b>Optional-Objekt</b>. Nur gültig, wenn <paramref name="SourceType" /> <b>xlConsolidation</b>ist. <b>True</b>, wenn von Microsoft Excel für die Konsolidierung ein Seitenfeld erstellt wird. Wenn <paramref name="AutoPage" /> <b> False </b>ist, müssen Sie das Seitenfeld oder die Felder erstellen.</param>
        <param name="Reserved"><b>Optional-Objekt</b>. Von Microsoft Excel nicht verwendet.</param>
        <param name="BackgroundQuery"><b>Optional-Objekt</b>. <b>True</b>, wenn Abfragen für den Bericht in Excel asynchron (im Hintergrund) ausgeführt werden sollen. Der Standardwert ist <b>Falsch</b>.</param>
        <param name="OptimizeCache"><b>Optional-Objekt</b>. <b>True</b>, wenn der PivotTable-Cache beim Erstellen optimiert werden soll. Der Standardwert ist <b>Falsch</b>.</param>
        <param name="PageFieldOrder"><b>Optional-Objekt</b>. Die Reihenfolge, in der Seitenfelder dem Layout des PivotTable-Berichts hinzugefügt werden. Dies kann eine der folgenden <see cref="T:Microsoft.Office.Interop.Excel.XlOrder" /> Konstanten sein: <b>xlDownThenOver</b> oder <b>xlOverThenDown</b>. Der Standardwert lautet <b>xlDownThenOver</b>.</param>
        <param name="PageFieldWrapCount"><b>Optional-Objekt</b>. Die Anzahl von Seitenfeldern in jeder Spalte oder Zeile des PivotTable-Berichts. Der Standardwert ist 0 (Null).</param>
        <param name="ReadData"><b>Optional-Objekt</b>. Mit <b>True</b> wird ein PivotTable-Cache erstellt, der alle Datensätze aus einer externen Datenbank enthält; dieser Cache kann sehr groß sein. Wenn <paramref name="ReadData" /> <b> False </b>ist, können Sie einige der Felder als serverbasierte Seitenfelder festlegen, bevor die Daten tatsächlich gelesen werden.</param>
        <param name="Connection"><b>Optional-Objekt</b>. Eine Zeichenfolge mit ODBC-Einstellungen, die eine Verbindung von Excel zu einer ODBC-Datenquelle ermöglicht. Die Verbindungszeichenfolge hat das Format "ODBC; &lt; Verbindungszeichenfolge &gt; ". Dieses Argument setzt alle vorherigen Einstellungen für die Eigenschaft des Objekts außer <see cref="T:Microsoft.Office.Interop.Excel.PivotCache" /> <see cref="P:Microsoft.Office.Interop.Excel.PivotCache.Connection" /> Kraft.</param>
        <summary>Erstellt ein <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> Objekt. Bei dieser Methode wird der PivotTable-Assistent nicht angezeigt. Diese Methode steht für OLE DB-Datenquellen nicht zur Verfügung. Verwenden Sie die <see cref="M:Microsoft.Office.Interop.Excel.PivotTables.Add(Microsoft.Office.Interop.Excel.PivotCache,System.Object,System.Object,System.Object,System.Object)" /> Methode, um einen PivotTable-Cache hinzuzufügen, und erstellen Sie dann einen PivotTable-Bericht basierend auf dem Cache.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotValueCell">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.PivotValueCell PivotValueCell (object rowline, object columnline);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.PivotValueCell PivotValueCell([in]object rowline, [in]object columnline) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.PivotTable.PivotValueCell(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function PivotValueCell (Optional rowline As Object, Optional columnline As Object) As PivotValueCell" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3064)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.PivotValueCell</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowline" Type="System.Object" />
        <Parameter Name="columnline" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="rowline">Wenn der Typ <b>PivotLine</b>ist, gibt die <b>PivotLine</b> im Zeilenbereich an, an der die <b>PivotValueCell</b> ausgerichtet ist. Wenn der Typ <b>Int</b>ist, gibt die Position der <b>PivotLine</b> im Zeilenbereich an, an der die <b>PivotValueCell</b> ausgerichtet ist. Wenn &lt;a0&gt;Missing&lt;/a0&gt;, &lt;a1&gt;Empty&lt;/a1&gt;, &lt;a2&gt;Null&lt;/a1&gt; oder &lt;a2&gt;0&lt;/a2&gt; angegeben ist, wird die Gesamtsumme der</param>
        <param name="columnline">Wenn der Typ <b>PivotLine</b>ist, gibt die <b>PivotLine</b> im Spaltenbereich an, an der die <b>PivotValueCell</b> ausgerichtet ist. Wenn der Typ <b>Int</b>ist, gibt die Position der <b>PivotLine</b> im Spaltenbereich an, an der die <b>PivotValueCell</b> ausgerichtet ist. Wenn &lt;a0&gt;Missing&lt;/a0&gt;, &lt;a1&gt;Empty&lt;/a1&gt;, &lt;a2&gt;Null&lt;/a1&gt; oder &lt;a2&gt;0&lt;/a2&gt; angegeben ist, wird die Gesamtsummen</param>
        <summary>Dient zum Abrufen des <see cref="T:Microsoft.Office.Interop.Excel.PivotValueCell" /> Objekts für eine bestimmte PivotTable, die bestimmte Zeilen- und Spaltenindizes bereitgestellt hat.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreserveFormatting">
      <MemberSignature Language="C#" Value="public bool PreserveFormatting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreserveFormatting" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.PreserveFormatting" />
      <MemberSignature Language="VB.NET" Value="Public Property PreserveFormatting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PreserveFormatting { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1500)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1500)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1500)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Diese Eigenschaft ist <b>True,</b> wenn die Formatierung beibehalten wird, wenn der Bericht durch Vorgänge wie Pivotieren, Sortieren oder Ändern von Seitenfeldelementen aktualisiert oder neu berechnet wird. <b>Boolescher</b> Wert mit Lese-/Schreibzugriff.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintDrillIndicators">
      <MemberSignature Language="C#" Value="public bool PrintDrillIndicators { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PrintDrillIndicators" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.PrintDrillIndicators" />
      <MemberSignature Language="VB.NET" Value="Public Property PrintDrillIndicators As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PrintDrillIndicators { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2549)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2549)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2549)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt an, ob Drilldownindikatoren mit der <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> gedruckt werden. Lese-/Schreibzugriff.</summary>
        <value><b>Boolescher Wert</b></value>
        <remarks><para>Gibt <b>True</b> zurück, wenn Drilldownindikatoren mit der gedruckt <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> werden, und gibt False <b>zurück,</b> wenn Drilldownindikatoren nicht mit der gedruckt <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> werden.</para>
          <para>Wenn die <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.ShowDrillIndicators" /> Eigenschaft auf <b>False</b>festgelegt ist, hat die Eigenschaft <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.ShowDrillIndicators" /> keine Auswirkung. Drilldownindikatoren werden nicht gedruckt, wenn sie nicht in der <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> angezeigt werden.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintTitles">
      <MemberSignature Language="C#" Value="public bool PrintTitles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PrintTitles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.PrintTitles" />
      <MemberSignature Language="VB.NET" Value="Public Property PrintTitles As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PrintTitles { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1838)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1838)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1838)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b>True</b>, wenn die Drucktitel des Arbeitsblatts auf der Grundlage des PivotTable-Berichts festgelegt werden. <b>False</b>, wenn die Drucktitel des Arbeitsblatts verwendet werden. Der Standardwert ist <b>False</b>. <b>Boolean</b>-Wert mit Lese-/Schreibzugriff.</summary>
        <value>To be added.</value>
        <remarks><para>Die Zeilendrucktitel werden auf die Zeilen, die die Spaltenfeldelemente des PivotTable-Berichts enthalten, festlegt. Die Spaltendrucktitel werden auf die Spalten festgelegt, die die Zeilenelemente enthalten.</para>
          <para>Der PivotTable-Bericht muss der einzige im Druckbereich sein. Verwenden Sie die Methode, um ein eingezogenes Format für einen PivotTable-Bericht <see cref="M:Microsoft.Office.Interop.Excel.PivotTable.Format(Microsoft.Office.Interop.Excel.XlPivotFormatType)" /> festzulegen.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshDataSourceValues">
      <MemberSignature Language="C#" Value="public void RefreshDataSourceValues ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RefreshDataSourceValues() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.PivotTable.RefreshDataSourceValues" />
      <MemberSignature Language="VB.NET" Value="Public Sub RefreshDataSourceValues ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RefreshDataSourceValues();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2878)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft die aktuellen Werte aus der Datenquelle für alle bearbeiteten Zellen in einem PivotTable-Bericht ab, der im Rückschreibemodus ausgeführt wird.</summary>
        <remarks><para>Um festzustellen, ob sich ein PivotTable-Bericht im Rückschreibmodus befindet, überprüfen Sie die <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.EnableWriteback" /> Eigenschaften <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.EnableDataValueEditing" /> des <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> Objekts, von denen einer True zurückgibt. Wenn Sie versuchen, diese Methode für PivotTable-Berichte auszuführen, die sich nicht im Rückschreibmodus befinden, gibt diese Methode einen Laufzeitfehler zurück.</para>
          <para>Bei PivotTable-Berichten mit OLAP-Datenquellen wird durch Ausführen der <see cref="M:Microsoft.Office.Interop.Excel.PivotTable.RefreshDataSourceValues" /> Methode eine separate Verbindung mit dem OLAP-Server erstellt und die vollständige MDX-Abfrage (der Wert des <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> .<see cref="P:Microsoft.Office.Interop.Excel.PivotTable.MDX" /> -Eigenschaft), die zum Ausführen eines Aktualisierungsvorgangs zum Auffüllen des PivotTable-Berichts verwendet wird. Excel extrahiert die zurückgegebenen Werte für alle Zellen, die in der PivotTable-Ansicht bearbeitet wurden, und speichert sie dann in der <see cref="P:Microsoft.Office.Interop.Excel.PivotCell.DataSourceValue" /> Eigenschaft für diese Zellen.</para>
          <para>Diese Methode gilt nur für PivotTable-Berichte mit OLAP-Datenquellen. Wenn Sie versuchen, diese Methode für PivotTable-Berichte mit Nicht-OLAP-Datenquellen auszuführen, gibt diese Methode einen Laufzeitfehler zurück.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshDate">
      <MemberSignature Language="C#" Value="public DateTime RefreshDate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime RefreshDate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.RefreshDate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RefreshDate As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime RefreshDate { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(696)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(696)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt das Datum der letzten Aktualisierung des PivotTable-Berichts zurück. Read-only <b>DateTime</b>.</summary>
        <value>To be added.</value>
        <remarks><para>Bei OLAP-Datenquellen wird diese Eigenschaft nach jeder Abfrage aktualisiert.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshName">
      <MemberSignature Language="C#" Value="public string RefreshName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RefreshName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.RefreshName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RefreshName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RefreshName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(697)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(697)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt den Namen der Person zurück, die die PivotTable-Berichtsdaten oder den PivotTable-Cache zuletzt aktualisiert hat. Schreibgeschützte <b>Zeichenfolge</b>.</summary>
        <value>To be added.</value>
        <remarks><para>Bei OLAP-Datenquellen wird diese Eigenschaft nach jeder Abfrage aktualisiert.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshTable">
      <MemberSignature Language="C#" Value="public bool RefreshTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RefreshTable() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.PivotTable.RefreshTable" />
      <MemberSignature Language="VB.NET" Value="Public Function RefreshTable () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RefreshTable();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(717)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Aktualisiert den PivotTable-Bericht mit den Quelldaten. Gibt bei erfolgreicher Aktualisierung <b>True</b> zurück.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RepeatAllLabels">
      <MemberSignature Language="C#" Value="public void RepeatAllLabels (Microsoft.Office.Interop.Excel.XlPivotFieldRepeatLabels Repeat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RepeatAllLabels([in]valuetype Microsoft.Office.Interop.Excel.XlPivotFieldRepeatLabels Repeat) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.PivotTable.RepeatAllLabels(Microsoft.Office.Interop.Excel.XlPivotFieldRepeatLabels)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RepeatAllLabels (Repeat As XlPivotFieldRepeatLabels)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RepeatAllLabels(Microsoft::Office::Interop::Excel::XlPivotFieldRepeatLabels Repeat);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2879)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Repeat" Type="Microsoft.Office.Interop.Excel.XlPivotFieldRepeatLabels" />
      </Parameters>
      <Docs>
        <param name="Repeat">Gibt an, ob Elementbeschriftungen für alle PivotFields in der angegebenen PivotTable wiederholt werden sollen.</param>
        <summary>Legt fest, ob Elementbeschriftungen für alle PivotFields in der angegebenen PivotTable wiederholt werden sollen.</summary>
        <remarks><para>Using the <see cref="M:Microsoft.Office.Interop.Excel.PivotTable.RepeatAllLabels(Microsoft.Office.Interop.Excel.XlPivotFieldRepeatLabels)" /> method corresponds to the Repeat All Item Labels and Do Not Repeat Item Labels commands on the Report Layout drop-down list of the PivotTable Tools Design tab.</para>
          <para>Verwenden Sie die Eigenschaft, um anzugeben, ob Elementbeschriftungen für ein einzelnes PivotField wiederholt werden <see cref="P:Microsoft.Office.Interop.Excel.PivotField.RepeatLabels" /> sollen.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RepeatItemsOnEachPrintedPage">
      <MemberSignature Language="C#" Value="public bool RepeatItemsOnEachPrintedPage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RepeatItemsOnEachPrintedPage" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.RepeatItemsOnEachPrintedPage" />
      <MemberSignature Language="VB.NET" Value="Public Property RepeatItemsOnEachPrintedPage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RepeatItemsOnEachPrintedPage { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1842)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1842)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1842)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b>True</b>, wenn Zeilen-, Spalten und Elementbeschriftungen beim Drucken des angegebenen PivotTable-Berichts in der ersten Zeile jeder Seite angezeigt werden. <b>False</b>, wenn die Beschriftungen lediglich auf der ersten Seite gedruckt werden. Der Standardwert ist <b>True</b>. <b>Boolean</b>-Wert mit Lese-/Schreibzugriff.</summary>
        <value>To be added.</value>
        <remarks><para>Der PivotTable-Bericht muss der einzige im Druckbereich sein. Verwenden Sie die Methode, um ein eingezogenes Format für einen PivotTable-Bericht <see cref="M:Microsoft.Office.Interop.Excel.PivotTable.Format(Microsoft.Office.Interop.Excel.XlPivotFormatType)" /> festzulegen.</para>
          <para>Microsoft Excel druckt Zeilen- und Spaltenbeschriftungen anstelle von Drucktiteln, die für das Arbeitsblatt festgelegt wurden. Verwenden Sie die <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.PrintTitles" /> Eigenschaft, um zu bestimmen, ob Drucktitel für den PivotTable-Bericht festgelegt sind.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RowAxisLayout">
      <MemberSignature Language="C#" Value="public void RowAxisLayout (Microsoft.Office.Interop.Excel.XlLayoutRowType RowLayout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RowAxisLayout([in]valuetype Microsoft.Office.Interop.Excel.XlLayoutRowType RowLayout) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.PivotTable.RowAxisLayout(Microsoft.Office.Interop.Excel.XlLayoutRowType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RowAxisLayout (RowLayout As XlLayoutRowType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RowAxisLayout(Microsoft::Office::Interop::Excel::XlLayoutRowType RowLayout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2556)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="RowLayout" Type="Microsoft.Office.Interop.Excel.XlLayoutRowType" />
      </Parameters>
      <Docs>
        <param name="RowLayout">Erforderlich <see cref="T:Microsoft.Office.Interop.Excel.XlLayoutRowType" /> kann <b>xlCompactRow</b>, <b>xlTabularRow</b>oder <b>xlOutlineRow</b>sein.</param>
        <summary>Diese Methode wird zum gleichzeitigen Festlegen von Layoutoptionen für alle vorhandenen <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> s verwendet.</summary>
        <remarks><para>Diese Methode ist atomar, sodass sichergestellt wird, dass sich die Layoutoptionen eines der Felder ändern und keine Änderungen am Feld vorgenommen werden, wenn layoutoptionen für keines der Felder festgelegt werden <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> können.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="RowFields">
      <MemberSignature Language="C#" Value="public object RowFields[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object RowFields(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.RowFields(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RowFields(Optional Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ RowFields[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(712)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(712)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><b>Optional-Objekt</b>. Der Name oder die Nummer des zurückzugebenden Felds (dies kann eine Matrix sein, um mehrere Felder anzugeben).</param>
        <summary>Gibt ein Objekt zurück, das entweder ein einzelnes Feld in einem PivotTable-Bericht (ein <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> Objekt) oder eine Auflistung aller Felder (ein <see cref="T:Microsoft.Office.Interop.Excel.PivotFields" /> Objekt) darstellt, die derzeit als Zeilenfelder angezeigt werden. Schreibgeschützt.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowGrand">
      <MemberSignature Language="C#" Value="public bool RowGrand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RowGrand" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.RowGrand" />
      <MemberSignature Language="VB.NET" Value="Public Property RowGrand As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RowGrand { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(693)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(693)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(693)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b>True</b>, wenn in dem PivotTable-Bericht Gesamtergebnisse für Zeilen angezeigt werden. <b>Boolean</b>-Wert mit Lese-/Schreibzugriff.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowRange">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range RowRange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range RowRange" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.RowRange" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RowRange As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ RowRange { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(701)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(701)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt zurück, das den Bereich einschließlich des Zeilenbereichs im PivotTable-Bericht darstellt. Schreibgeschützt.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveData">
      <MemberSignature Language="C#" Value="public bool SaveData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SaveData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.SaveData" />
      <MemberSignature Language="VB.NET" Value="Public Property SaveData As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SaveData { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(692)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(692)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(692)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b></b> True , wenn Daten für den PivotTable-Bericht mit der Arbeitsmappe gespeichert werden. <b>False</b>, wenn nur die Definition des Berichts gespeichert wird. <b>Boolescher</b> Wert mit Lese-/Schreibzugriff.</summary>
        <value>To be added.</value>
        <remarks><para>Bei OLAP-Datenquellen ist diese Eigenschaft immer auf <b>False</b> festgelegt.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionMode">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlPTSelectionMode SelectionMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlPTSelectionMode SelectionMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.SelectionMode" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionMode As XlPTSelectionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlPTSelectionMode SelectionMode { Microsoft::Office::Interop::Excel::XlPTSelectionMode get(); void set(Microsoft::Office::Interop::Excel::XlPTSelectionMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1503)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1503)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1503)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlPTSelectionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt den strukturierten Markierungsmodus eines PivotTable-Berichts zurück oder legt ihn fest. Lese-/Schreibzugriff. <see cref="T:Microsoft.Office.Interop.Excel.XlPTSelectionMode" /></summary>
        <value>To be added.</value>
        <remarks><para>Liegt das PivotTable-Feld nicht in Form einer Gliederung vor, entspricht die Angabe der Summe einer beliebigen Konstante und <b>xlFirstRow</b> der Angabe der einzelnen Konstante.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowCellBackgroundFromOLAP">
      <MemberSignature Language="C#" Value="public bool ShowCellBackgroundFromOLAP { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowCellBackgroundFromOLAP" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.ShowCellBackgroundFromOLAP" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowCellBackgroundFromOLAP As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowCellBackgroundFromOLAP { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2138)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2138)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2138)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b></b> True , wenn der MDX -Ausdruck (Multidimensional Expression), der an den Server gesendet Microsoft Excel, die <see cref="P:Microsoft.Office.Interop.Excel.ChartFillFormat.BackColor" /> Eigenschaft für jede Zelle im Datenbereich enthält, die einer Zelle im OLAP-Dataset (Online Analytical Processing) entspricht. Der Standardwert ist <b>Falsch</b>. <b>Boolescher</b> Wert mit Lese-/Schreibzugriff.</summary>
        <value>To be added.</value>
        <remarks><para>Wenn der OLAP-Datensatz einen <b>BackColor-Eigenschaftswert</b> zurückgibt, wird die Füllfarbe der Zelle auf die nächste Farbe in Microsoft Excel Palette für dieses Arbeitsblatt festgelegt. Wenn der Benutzer die Zellmusterformatierung manuell auf die Zelle anwendet, überschreibt dies alle Formatierungen aus dem OLAP-Dataset.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowDrillIndicators">
      <MemberSignature Language="C#" Value="public bool ShowDrillIndicators { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowDrillIndicators" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.ShowDrillIndicators" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowDrillIndicators As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowDrillIndicators { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2548)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2548)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2548)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.ShowDrillIndicators" /> Eigenschaft wird zum Umschalten der Anzeige von Drilldownindikatoren in der <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> verwendet. Lese-/Schreibzugriff.</summary>
        <value><b>Boolescher Wert</b></value>
        <remarks><para>Gibt <b>True zurück,</b> wenn Drilldownindikatoren in der angezeigt <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> werden, und gibt False <b>zurück,</b> wenn Drilldownindikatoren nicht in der angezeigt <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> werden. </para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowPageMultipleItemLabel">
      <MemberSignature Language="C#" Value="public bool ShowPageMultipleItemLabel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowPageMultipleItemLabel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.ShowPageMultipleItemLabel" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowPageMultipleItemLabel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowPageMultipleItemLabel { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2130)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2130)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2130)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bei <b>True</b> (Standard) wird in der PivotTable-Zelle im Arbeitsblatt "(Mehrere Elemente)" angezeigt, wenn Elemente verborgen sind und eine Reihe von nicht verborgenen Elementen in der PivotTable-Ansicht angezeigt werden. <b>Boolean</b>-Wert mit Lese-/Schreibzugriff.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowPages">
      <MemberSignature Language="C#" Value="public object ShowPages (object PageField);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ShowPages([in]object PageField) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.PivotTable.ShowPages(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowPages (Optional PageField As Object) As Object" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(706)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="PageField" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="PageField"><b>Optional-Objekt</b>. Eine Zeichenfolge, die ein einzelnes Seitenfeld des Berichts angibt.</param>
        <summary>Erstellt einen neuen PivotTable-Bericht für jedes Element im Seitenfeld. Jeder neue Bericht wird in einem neuen Arbeitsblatt erstellt.</summary>
        <returns>To be added.</returns>
        <remarks><para>Diese Methode steht für OLAP-Datenquellen nicht zur Verfügung.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowTableStyleColumnHeaders">
      <MemberSignature Language="C#" Value="public bool ShowTableStyleColumnHeaders { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowTableStyleColumnHeaders" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.ShowTableStyleColumnHeaders" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowTableStyleColumnHeaders As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowTableStyleColumnHeaders { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2567)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2567)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2567)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.ShowTableStyleColumnHeaders" /> Eigenschaft wird auf True festgelegt, wenn die Spaltenüberschriften in der angezeigt werden <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> sollen. Lese-/Schreibzugriff.</summary>
        <value>Boolesch</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowTableStyleColumnStripes">
      <MemberSignature Language="C#" Value="public bool ShowTableStyleColumnStripes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowTableStyleColumnStripes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.ShowTableStyleColumnStripes" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowTableStyleColumnStripes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowTableStyleColumnStripes { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2565)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2565)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2565)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die boolesche Eigenschaft zeigt gebänderte Spalten an, in denen gerade Spalten anders formatiert sind als ungerade Spalten. Dies erleichtert <see cref="T:Microsoft.Office.Interop.Excel.PivotTables" /> das Lesen. Lese-/Schreibzugriff.</summary>
        <value>Boolesch</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowTableStyleLastColumn">
      <MemberSignature Language="C#" Value="public bool ShowTableStyleLastColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowTableStyleLastColumn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.ShowTableStyleLastColumn" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowTableStyleLastColumn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowTableStyleLastColumn { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2563)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2563)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2563)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Für die interne Verwendung reserviert.</summary>
        <value>Gibt <see cref="T:System.Boolean" /> zurück.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowTableStyleRowHeaders">
      <MemberSignature Language="C#" Value="public bool ShowTableStyleRowHeaders { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowTableStyleRowHeaders" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.ShowTableStyleRowHeaders" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowTableStyleRowHeaders As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowTableStyleRowHeaders { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2566)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2566)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2566)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.ShowTableStyleRowHeaders" /> property is set to True if the row headers should be displayed in the <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> . Lese-/Schreibzugriff.</summary>
        <value>Boolesch</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowTableStyleRowStripes">
      <MemberSignature Language="C#" Value="public bool ShowTableStyleRowStripes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowTableStyleRowStripes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.ShowTableStyleRowStripes" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowTableStyleRowStripes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowTableStyleRowStripes { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2564)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2564)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2564)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.ShowTableStyleRowStripes" /> Eigenschaft zeigt gebänderte Zeilen an, in denen gerade Zeilen anders formatiert sind als ungerade Zeilen. Dies erleichtert <see cref="T:Microsoft.Office.Interop.Excel.PivotTables" /> das Lesen. Lese-/Schreibzugriff.</summary>
        <value>Boolesch</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowValuesRow">
      <MemberSignature Language="C#" Value="public bool ShowValuesRow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowValuesRow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.ShowValuesRow" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowValuesRow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowValuesRow { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2883)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2883)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2883)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt fest, ob die Wertezeile angezeigt wird.</summary>
        <value><b>true,</b> wenn die Wertezeile angezeigt wird; andernfalls <b>false</b>.</value>
        <remarks><para>Lese-/Schreibzugriff.</para>
          <para>Diese Eigenschaft entspricht dem Festlegen des Kontrollkästchens Die Wertezeile anzeigen auf der Registerkarte Anzeige im Dialogfeld PivotTable-Optionen.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Slicers">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Slicers Slicers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Slicers Slicers" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.Slicers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Slicers As Slicers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Slicers ^ Slicers { Microsoft::Office::Interop::Excel::Slicers ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2881)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2881)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Slicers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die <see cref="T:Microsoft.Office.Interop.Excel.Slicers" /> Auflistung für die angegebene PivotTable ab.</summary>
        <value>Die <see cref="T:Microsoft.Office.Interop.Excel.Slicers" /> Auflistung für die angegebene PivotTable.</value>
        <remarks><para>Schreibgeschützt.</para>
          <para>Datenschnitte können zum Filtern von Daten in PivotTable-Berichten verwendet werden. Die <see cref="T:Microsoft.Office.Interop.Excel.Slicers" /> Auflistung enthält <see cref="T:Microsoft.Office.Interop.Excel.Slicer" /> Objekte, die die Datenschnitte darstellen, die der angegebenen PivotTable zugeordnet sind.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SmallGrid">
      <MemberSignature Language="C#" Value="public bool SmallGrid { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SmallGrid" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.SmallGrid" />
      <MemberSignature Language="VB.NET" Value="Public Property SmallGrid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SmallGrid { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1841)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1841)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1841)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b>True</b>, wenn Microsoft Excel ein Raster verwendet, das für einen neu erstellten PivotTable-Bericht eine Breite und eine Tiefe von zwei Zellen besitzt. <b>False</b>, wenn Excel eine leere Schablonenkontur verwendet. <b>Boolean</b>-Wert mit Lese-/Schreibzugriff.</summary>
        <value>To be added.</value>
        <remarks><para>Sie sollten die Schablonenkontur verwenden. Das Raster wird nur deshalb zur Verfügung gestellt, da es eine Kompatibilität mit früheren Versionen von Excel ermöglicht.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SortUsingCustomLists">
      <MemberSignature Language="C#" Value="public bool SortUsingCustomLists { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SortUsingCustomLists" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.SortUsingCustomLists" />
      <MemberSignature Language="VB.NET" Value="Public Property SortUsingCustomLists As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SortUsingCustomLists { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2574)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2574)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2574)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.SortUsingCustomLists" /> Eigenschaft steuert, ob benutzerdefinierte Listen zum Sortieren von Elementen von Feldern verwendet werden, sowohl bei der Initialisierung als auch <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> bei der Reihenfolge der <see cref="T:Microsoft.Office.Interop.Excel.PivotItems" /> Beschriftungen und später, wenn der Benutzer eine Sortierung anwendet. Lese-/Schreibzugriff.</summary>
        <value><b>Boolescher Wert</b></value>
        <remarks><para>Das Festlegen dieser Eigenschaft auf <b>False</b> kann die Leistung für Felder mit vielen Elementen optimieren, außerdem können Benutzer, die nicht auf Grundlage von benutzerdefinierten Listen sortieren möchten, dies vermeiden.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceData">
      <MemberSignature Language="C#" Value="public object SourceData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SourceData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.SourceData" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceData As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SourceData { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(686)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(686)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(686)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt die Datenquelle für den PivotTable-Bericht zurück. Objekt <b>mit</b>Lese-/Schreibzugriff.</summary>
        <value>To be added.</value>
        <remarks><para>Der zurückgegebene Wert hängt von der Datenquelle wie folgt ab:</para>
          <list type="table">
            <item>
              <term>Microsoft Excel-Liste oder Datenbank</term>
              <description>Der Zellbezug als Text.</description>
            </item>
            <item>
              <term>Externe Datenquelle</term>
              <description>Ein Array. Jede Zeile besteht aus einer SQL Verbindungszeichenfolge mit den verbleibenden Elementen als Abfragezeichenfolge, unterteilt in Segmente mit 255 Zeichen.</description>
            </item>
            <item>
              <term>Mehrere Konsolidierungsbereiche</term>
              <description>Eine zweidimensionale Matrix. Jede Zeile besteht aus einem Bezug und den zugeordneten Seitenfeldelementen.</description>
            </item>
            <item>
              <term>Ein anderer PivotTable-Bericht</term>
              <description>Eine der drei oben aufgeführten Informationen.</description>
            </item>
          </list>
          <para>Diese Eigenschaft steht für OLE DB-Datenquellen nicht zur Verfügung.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SubtotalHiddenPageItems">
      <MemberSignature Language="C#" Value="public bool SubtotalHiddenPageItems { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SubtotalHiddenPageItems" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.SubtotalHiddenPageItems" />
      <MemberSignature Language="VB.NET" Value="Public Property SubtotalHiddenPageItems As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SubtotalHiddenPageItems { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1498)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1498)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1498)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b>True</b>, wenn ausgeblendete Seitenfeldelemente des PivotTable-Berichts in Zeilen- und Spaltenteilergebnisse, Blocksummen oder Gesamtsummen enthalten sind. Der Standardwert ist <b>False</b>. <b>Boolean</b>-Wert mit Lese-/Schreibzugriff.</summary>
        <value>To be added.</value>
        <remarks><para>Bei OLAP-Datenquellen ist der Wert immer <b>True</b>.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="SubtotalLocation">
      <MemberSignature Language="C#" Value="public void SubtotalLocation (Microsoft.Office.Interop.Excel.XlSubtototalLocationType Location);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SubtotalLocation([in]valuetype Microsoft.Office.Interop.Excel.XlSubtototalLocationType Location) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.PivotTable.SubtotalLocation(Microsoft.Office.Interop.Excel.XlSubtototalLocationType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SubtotalLocation (Location As XlSubtototalLocationType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SubtotalLocation(Microsoft::Office::Interop::Excel::XlSubtototalLocationType Location);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2558)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Location" Type="Microsoft.Office.Interop.Excel.XlSubtototalLocationType" />
      </Parameters>
      <Docs>
        <param name="Location">Erforderlich <see cref="T:Microsoft.Office.Interop.Excel.XlSubtototalLocationType" /> kann <b>xlAtTop</b> oder <b>xlAtBottom</b>sein.</param>
        <summary>Diese Methode ändert den Teilergebnisspeicherort für alle vorhandenen <see cref="T:Microsoft.Office.Interop.Excel.PivotFields" /> . Das Ändern des Teilergebnisspeicherorts hat nur für Felder im Gliederungsformat eine sofortige visuelle Auswirkung, es wird jedoch auch für Felder im Tabellenformat festgelegt.</summary>
        <remarks><para>Die <see cref="M:Microsoft.Office.Interop.Excel.PivotTable.SubtotalLocation(Microsoft.Office.Interop.Excel.XlSubtototalLocationType)" /> Methode legt die Eigenschaft für alle vorhandenen S automatisch <see cref="P:Microsoft.Office.Interop.Excel.PivotField.LayoutSubtotalLocation" /> <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> fest.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Summary">
      <MemberSignature Language="C#" Value="public string Summary { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Summary" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.Summary" />
      <MemberSignature Language="VB.NET" Value="Public Property Summary As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Summary { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(273)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(273)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(273)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Beschreibung ab, die der alternativen Textzeichenfolge für die angegebene PivotTable zugeordnet ist, oder legt sie fest.</summary>
        <value>Die Beschreibung, die der alternativen Textzeichenfolge für die angegebene PivotTable zugeordnet ist.</value>
        <remarks><para>Lese-/Schreibzugriff.</para>
          <para>Der Wert der <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.Summary" /> Eigenschaft entspricht dem Wert im Feld "Beschreibung" auf der Registerkarte "Alternativer Text" des Dialogfelds "PivotTable-Optionen".</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="TableRange1">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range TableRange1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range TableRange1" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.TableRange1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TableRange1 As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ TableRange1 { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(699)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(699)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt zurück, das den Bereich darstellt, der den gesamten PivotTable-Bericht enthält, jedoch keine Seitenfelder enthält. Schreibgeschützt.</summary>
        <value>To be added.</value>
        <remarks><para>Die <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.TableRange2" /> Eigenschaft enthält Seitenfelder.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="TableRange2">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Range TableRange2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Range TableRange2" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.TableRange2" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TableRange2 As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Range ^ TableRange2 { Microsoft::Office::Interop::Excel::Range ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(700)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(700)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt ein <see cref="T:Microsoft.Office.Interop.Excel.Range" /> Objekt zurück, das den Bereich darstellt, der den gesamten PivotTable-Bericht einschließlich Seitenfeldern enthält. Schreibgeschützt.</summary>
        <value>To be added.</value>
        <remarks><para>Die <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.TableRange1" /> Eigenschaft enthält keine Seitenfelder.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="TableStyle">
      <MemberSignature Language="C#" Value="public string TableStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TableStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.TableStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property TableStyle As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TableStyle { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1504)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1504)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1504)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.TypeLibFunc(64)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt die Formatvorlage zurück, die im Text des PivotTable-Berichts verwendet wird, oder legt sie fest. Der Standardwert ist eine leere Zeichenfolge (standardmäßig wird keine Formatvorlage zugewiesen). <b>Zeichenfolge</b> mit Lese-/Schreibzugriff.</summary>
        <value>To be added.</value>
        <remarks><para>Diese Formatvorlage wird als Standardformatvorlage für den Hintergrundbereich verwendet und zugewiesen, bevor eine Formatierung durch den Benutzer vorgenommen wird.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="TableStyle2">
      <MemberSignature Language="C#" Value="public object TableStyle2 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TableStyle2" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.TableStyle2" />
      <MemberSignature Language="VB.NET" Value="Public Property TableStyle2 As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ TableStyle2 { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2562)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2562)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2562)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.TableStyle2" /> Eigenschaft gibt die <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> Formatvorlage an, die derzeit auf die <see cref="T:Microsoft.Office.Interop.Excel.PivotTable" /> angewendet wird. Lese-/Schreibzugriff.</summary>
        <value><b>Objekt</b></value>
        <remarks><para>Die Eigenschaft wird <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.TableStyle2" /> aufgerufen, da eine vorhandene Eigenschaft mit dem Namen <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.TableStyle" /> vorhanden ist.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public string Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Tag" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Tag { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1505)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1505)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1505)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt eine Zeichenfolge zurück, die mit dem PivotTable-Bericht gespeichert wird, oder legt sie fest. <b>String</b>-Wert mit Lese-/Schreibzugriff.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TotalsAnnotation">
      <MemberSignature Language="C#" Value="public bool TotalsAnnotation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TotalsAnnotation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.TotalsAnnotation" />
      <MemberSignature Language="VB.NET" Value="Public Property TotalsAnnotation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TotalsAnnotation { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1843)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1843)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1843)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b>True</b>, wenn neben jedem Teilergebnis- und Gesamtergebniswert in dem angegebenen PivotTable-Bericht ein Sternchen (*) angezeigt wird, sofern der Bericht auf einer OLAP-Datenquelle basiert. Der Standardwert ist <b>True</b>. <b>Boolean</b>-Wert mit Lese-/Schreibzugriff.</summary>
        <value>To be added.</value>
        <remarks><para>Ist diese Eigenschaft auf <b>True</b> eingestellt, kennzeichnet das Sternchen, dass in der Gesamtsumme ausgeblendete Elemente enthalten sind. Das Sternchen wird unabhängig davon, ob Elemente in dem Bericht ausgeblendet wurden, angezeigt.</para>
          <para>Für Nicht-OLAP-Datenquellen ist der Wert dieser Eigenschaft immer <b>False</b>.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public void Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Update() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.PivotTable.Update" />
      <MemberSignature Language="VB.NET" Value="Public Sub Update ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Update();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(680)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Aktualisiert den Link- oder PivotTable-Bericht.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VacatedStyle">
      <MemberSignature Language="C#" Value="public string VacatedStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VacatedStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.VacatedStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property VacatedStyle As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ VacatedStyle { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1506)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1506)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(1506)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt die Formatvorlage von Zellen zurück, die frei werden, wenn der PivotTable-Bericht aktualisiert wird, oder legt diese fest. Der Standardwert ist eine leere Zeichenfolge (standardmäßig wird keine Formatvorlage zugewiesen). <b>String</b>-Wert mit Lese-/Schreibzugriff.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(6)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Der Name des PivotTable-Berichts. <b>Zeichenfolge</b> mit Lese-/Schreibzugriff.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlPivotTableVersionList Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlPivotTableVersionList Version" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As XlPivotTableVersionList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlPivotTableVersionList Version { Microsoft::Office::Interop::Excel::XlPivotTableVersionList get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(392)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(392)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlPivotTableVersionList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt die Microsoft Excel Versionsnummer zurück. Schreibgeschützt. <see cref="T:Microsoft.Office.Interop.Excel.XlPivotTableVersionList" /></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewCalculatedMembers">
      <MemberSignature Language="C#" Value="public bool ViewCalculatedMembers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ViewCalculatedMembers" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.ViewCalculatedMembers" />
      <MemberSignature Language="VB.NET" Value="Public Property ViewCalculatedMembers As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ViewCalculatedMembers { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2124)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2124)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2124)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bei <b>True</b> (Standard) können berechnete Elemente für OLAP (Online Analytical Processing)-PivotTables angezeigt werden. <b>Boolean</b> Wert mit Lese-/Schreibzugriff.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisibleFields">
      <MemberSignature Language="C#" Value="public object VisibleFields[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object VisibleFields(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.VisibleFields(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VisibleFields(Optional Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ VisibleFields[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(710)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(710)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><b>Optional-Objekt</b>. Der Name oder die Nummer des zurückzugebenden Felds (dies kann eine Matrix sein, um mehrere Felder anzugeben).</param>
        <summary>Gibt ein Objekt zurück, das ein einzelnes Feld in einem PivotTable-Bericht (ein <see cref="T:Microsoft.Office.Interop.Excel.PivotField" /> Objekt) oder eine Auflistung aller sichtbaren Felder (ein <see cref="T:Microsoft.Office.Interop.Excel.PivotFields" /> Objekt) darstellt. Sichtbare Felder werden als Zeilen-, Spalten-, Seiten- oder Datenfelder angezeigt. Schreibgeschützt.</summary>
        <value>To be added.</value>
        <remarks><para>Für OLAP-Datenquellen gibt es keine ausgeblendeten Felder, und diese Eigenschaft gibt alle Felder im PivotTable-Cache zurück.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualTotals">
      <MemberSignature Language="C#" Value="public bool VisualTotals { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool VisualTotals" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.VisualTotals" />
      <MemberSignature Language="VB.NET" Value="Public Property VisualTotals As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool VisualTotals { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2129)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2129)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2129)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b>True</b> (Standard), um OLAP-PivotTables (Online Analytical Processing) zu aktivieren, um die Summe neu zu berechnen, nachdem ein Element aus der Ansicht ausgeblendet wurde. <b>Boolescher</b> Wert mit Lese-/Schreibzugriff.</summary>
        <value>To be added.</value>
        <remarks><para>Wenn Sie in Nicht-OLAP-PivotTables ein Element ausblenden, wird das Ergebnis erneut berechnet, um nur die Elemente in dem Ergebnis widerzuspiegeln, die in der PivotTable sichbar bleiben. In einer OLAP-PivotTable wird das Ergebnis auf dem Server berechnet, d. h. es spielt keine Rolle, ob Elemente in der PivotTable-Ansicht ausgeblendet werden. Wenn die <b>VisualTotals</b>-Eigenschaft jedoch für eine OLAP-PivotTable den Wert <b>False</b> erhält, dann stimmen die Ergebnisse der OLAP-PivotTable mit denen der Nicht-OLAP-PivotTable überein.</para>
          <para>Bei OLAP-PivotTables erreicht die <b>VisualTotals</b>-Eigenschaft mit dem Wert <b>True</b> (Standard) dasselbe Ergebnis wie für Nicht-OLAP-PivotTables.</para>
          <para>Die <b>VisualTotals</b>-Eigenschaft gibt für alle neuen PivotTables den Wert <b>True</b> zurück. Wenn Sie jedoch eine Arbeitsmappe in der aktuellen Version von Microsoft Excel öffnen und die PivotTable in einer früheren Version von Excel erstellt wurde, gibt die <b>VisualTotals</b> -Eigenschaft <b>False</b>zurück.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualTotalsForSets">
      <MemberSignature Language="C#" Value="public bool VisualTotalsForSets { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool VisualTotalsForSets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.PivotTable.VisualTotalsForSets" />
      <MemberSignature Language="VB.NET" Value="Public Property VisualTotalsForSets As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool VisualTotalsForSets { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2882)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2882)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2882)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt fest, ob gefilterte Elemente in die Summen benannter Mengen für die angegebene PivotTable eingeschlossen werden sollen.</summary>
        <value><b>true,</b> wenn gefilterte Elemente in den Summen der benannten Mengen für die angegebene PivotTable enthalten sind; andernfalls <b>false</b>. Der Standardwert ist <b>"false".</b></value>
        <remarks><para>Lese-/Schreibzugriff.</para>
          <para>
            <b>true,</b> wenn gefilterte Elemente in den Summen für benannte Sätze enthalten sind; andernfalls <b>false</b>. Der Standardwert dieser Eigenschaft ist <b>"false".</b></para>
          <para>In einer auf einer OLAP-Datenquelle basierenden PivotTable kann konfiguriert werden, ob die Summen für benannte Mengen in der PivotTable gefilterte Elemente enthalten. Die Einstellung der <see cref="P:Microsoft.Office.Interop.Excel.PivotTable.VisualTotalsForSets" /> Eigenschaft entspricht dem Kontrollkästchen Gefilterte Elemente einschließen auf der Registerkarte Summenfilter &amp; des Dialogfelds PivotTable-Optionen .</para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
