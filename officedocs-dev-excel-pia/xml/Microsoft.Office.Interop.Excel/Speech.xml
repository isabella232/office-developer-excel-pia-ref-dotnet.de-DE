<Type Name="Speech" FullName="Microsoft.Office.Interop.Excel.Speech">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0f654b6c10e3110a0b6267111f978db256db44bf2d1d9243f90625e0e06faff0" /><Meta Name="ms.sourcegitcommit" Value="daf501296516d104cf396246ac0d336adfeffd0d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/06/2021" /><Meta Name="ms.locfileid" Value="54516970" /></Metadata><TypeSignature Language="C#" Value="public interface Speech" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract Speech" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.Speech" />
  <TypeSignature Language="VB.NET" Value="Public Interface Speech" />
  <TypeSignature Language="C++ CLI" Value="public interface class Speech" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("00024466-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Enthält Methoden und Eigenschaften, die auf die Sprache bezogen sind.</summary>
    <remarks><para>Verwenden Sie die <see cref="P:Microsoft.Office.Interop.Excel._Application.Speech" /> Eigenschaft des <see cref="T:Microsoft.Office.Interop.Excel.Application" /> Objekts, um ein <b>Speech-Objekt</b> zurückzugeben.</para>
      <para>Nachdem ein <b>Speech-Objekt</b> zurückgegeben wurde, können Sie die <see cref="M:Microsoft.Office.Interop.Excel.Speech.Speak(System.String,System.Object,System.Object,System.Object)" /> Methode des <b>Speech-Objekts</b> verwenden, um den Inhalt einer Zeichenfolge wiederzugeben.</para>
      <para>
        <b>Hinweis:</b>In der Setupstruktur ist ein Sprachfeature vorhanden, das sich auf Diktat und &amp; Befehlssteuerung bezieht, die nicht installiert werden müssen.</para>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlSpeakDirection Direction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlSpeakDirection Direction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Speech.Direction" />
      <MemberSignature Language="VB.NET" Value="Public Property Direction As XlSpeakDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlSpeakDirection Direction { Microsoft::Office::Interop::Excel::XlSpeakDirection get(); void set(Microsoft::Office::Interop::Excel::XlSpeakDirection value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(168)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(168)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(168)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlSpeakDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt die Reihenfolge zurück, in der die Zellen ausgegeben werden, oder legt diese fest.</summary>
        <value>To be added.</value>
        <remarks><para>Der Wert der <b>Direction</b> -Eigenschaft ist eine <see cref="T:Microsoft.Office.Interop.Excel.XlSpeakDirection" /> Konstante.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Speak">
      <MemberSignature Language="C#" Value="public void Speak (string Text, object SpeakAsync, object SpeakXML, object Purge);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Speak([in]string Text, [in]object SpeakAsync, [in]object SpeakXML, [in]object Purge) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.Speech.Speak(System.String,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Speak (Text As String, Optional SpeakAsync As Object, Optional SpeakXML As Object, Optional Purge As Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2017)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Text" Type="System.String" />
        <Parameter Name="SpeakAsync" Type="System.Object" />
        <Parameter Name="SpeakXML" Type="System.Object" />
        <Parameter Name="Purge" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Text"><b>String</b> erforderlich. Der wiederzugebende Text.</param>
        <param name="SpeakAsync"><b>Optional-Objekt</b>. <b>"True"</b> bewirkt, dass die Sprache <paramref name="Text" /> asynchron gesprochen wird (die Methode wartet nicht, bis die <paramref name="Text" /> Sprache gesprochen wird). <b>False</b> bewirkt, dass die <paramref name="Text" /> Sprache synchron gesprochen wird (die Methode wartet, bis sie <paramref name="Text" /> gesprochen wird, bevor sie fortgesetzt wird). Der Standardwert ist <b>False</b>.</param>
        <param name="SpeakXML">Optionaler <b>Boolean</b>-Wert. <b>"True"</b> bewirkt, dass die Datei <paramref name="Text" /> als XML interpretiert wird. <b>"False"</b> bewirkt, dass die <paramref name="Text" /> Xml-Tags nicht als XML interpretiert werden, sodass alle XML-Tags gelesen und nicht interpretiert werden. Der Standardwert ist <b>False</b>.</param>
        <param name="Purge"><b>Optional-Objekt</b>. <b>"True"</b> bewirkt, dass die aktuelle Sprache beendet und gepufferter Text gelöscht wird, bevor <paramref name="Text" /> gesprochen wird. <b>False</b> bewirkt nicht, dass die aktuelle Sprache beendet wird, und löscht den gepufferten Text nicht, bevor <paramref name="Text" /> er gesprochen wird. Der Standardwert ist <b>False</b>.</param>
        <summary>Microsoft Excel gibt die angegebene Textzeichenfolge wieder.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpeakCellOnEnter">
      <MemberSignature Language="C#" Value="public bool SpeakCellOnEnter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SpeakCellOnEnter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.Speech.SpeakCellOnEnter" />
      <MemberSignature Language="VB.NET" Value="Public Property SpeakCellOnEnter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SpeakCellOnEnter { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2235)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2235)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2235)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Microsoft Excel unterstützt einen Modus, bei dem der Inhalt der aktiven Zelle sprachlich ausgegeben wird, wenn die EINGABETASTE gedrückt wird oder die Bearbeitung der aktiven Zelle abgeschlossen ist. Wenn Sie für die <b>SpeakCellOnEnter</b>-Eigenschaft den Wert <b>True</b> festlegen, wird dieser Modus aktiviert. Bei <b>False</b> wird der Modus deaktiviert.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>